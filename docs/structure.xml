<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="LudoDB PHP WebService framework">
  <file path="LudoDB.php" hash="b98a610b8672df9bbe09a2a88800ae8d" package="LudoDB">
    <docblock line="2">
      <description>Base class for LudoDB adapters
User: Alf Magne Kalleland
Date: 03.11.12</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="LudoDB">
      <extends/>
      <name>LudoDB</name>
      <full_name>\LudoDB</full_name>
      <docblock line="9">
        <description>LudoDB class</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="20" namespace="global" package="Default">
        <name>$logSQLs</name>
        <default>false</default>
        <docblock line="16">
          <description>True when logging SQL's to file</description>
          <long-description/>
          <tag line="16" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="25" namespace="global" package="Default">
        <name>$instance</name>
        <default/>
        <docblock line="21">
          <description>LudoDB references</description>
          <long-description/>
          <tag line="21" name="var" description="" type="\LudoDB">
            <type by_reference="false">\LudoDB</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="30" namespace="global" package="Default">
        <name>$loggingEnabled</name>
        <default>false</default>
        <docblock line="26">
          <description>Return logging details in response from LudoDBRequestHandler</description>
          <long-description/>
          <tag line="26" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="35" namespace="global" package="Default">
        <name>$startTime</name>
        <default/>
        <docblock line="31">
          <description>Internal microtime representing start time for LudoDB operations.</description>
          <long-description/>
          <tag line="31" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="40" namespace="global" package="Default">
        <name>$queryCounter</name>
        <default>0</default>
        <docblock line="36">
          <description>Number of SQL queries executed</description>
          <long-description/>
          <tag line="36" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Default">
        <name>$connectionType</name>
        <default>'PDO'</default>
        <docblock line="41">
          <description>Connection type</description>
          <long-description/>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="51" namespace="global" package="Default">
        <name>$conn</name>
        <default/>
        <docblock line="47">
          <description>Connection object</description>
          <long-description/>
          <tag line="47" name="var" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="LudoDB">
        <name>setConnectionType</name>
        <full_name>setConnectionType</full_name>
        <docblock line="64">
          <description>Set connection type,  PDO|MySqlI|MySql</description>
          <long-description/>
          <tag line="64" name="param" description="" type="\" variable="$type"/>
        </docblock>
        <argument line="68">
          <name>$type</name>
          <default>'PDO'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="LudoDB">
        <name>enableSqlLogging</name>
        <full_name>enableSqlLogging</full_name>
        <docblock line="78">
          <description>Logs all sql queries to sql.txt</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="LudoDB">
        <name>hasPDO</name>
        <full_name>hasPDO</full_name>
        <docblock line="85">
          <description>Returns true if connection type is PDO</description>
          <long-description/>
          <tag line="85" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="96" package="LudoDB">
        <name>enableLogging</name>
        <full_name>enableLogging</full_name>
        <docblock line="93">
          <description>Used to enable logging details(elapsed time and number of SQL queries) in JSON response from LudoDBRequestHandler</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="LudoDB">
        <name>isLoggingEnabled</name>
        <full_name>isLoggingEnabled</full_name>
        <docblock line="102">
          <description>Returns true if logging of SQL queries and elapsed time in LudoDBRequestHandler</description>
          <long-description/>
          <tag line="102" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="115" package="LudoDB">
        <name>getElapsed</name>
        <full_name>getElapsed</full_name>
        <docblock line="111">
          <description>Return elapsed time for LudoDB operations.</description>
          <long-description/>
          <tag line="111" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="124" package="LudoDB">
        <name>getQueryCount</name>
        <full_name>getQueryCount</full_name>
        <docblock line="120">
          <description>Return number of executed SQL queries.</description>
          <long-description/>
          <tag line="120" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="133" package="LudoDB">
        <name>getTime</name>
        <full_name>getTime</full_name>
        <docblock line="129">
          <description>Return microtime</description>
          <long-description/>
          <tag line="129" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="142" package="LudoDB">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="138">
          <description>Return new LudoDB object with connection to the database.</description>
          <long-description/>
          <tag line="138" name="return" description="" type="\LudoDB|\LudoDBMySql|\LudoDBMySqlI|\LudoDBPDO">
            <type by_reference="false">\LudoDB</type>
            <type by_reference="false">\LudoDBMySql</type>
            <type by_reference="false">\LudoDBMySqlI</type>
            <type by_reference="false">\LudoDBPDO</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="LudoDB">
        <name>setHost</name>
        <full_name>setHost</full_name>
        <docblock line="160">
          <description>Set host for database connection.</description>
          <long-description/>
          <tag line="160" name="param" description="" type="\" variable="$host"/>
        </docblock>
        <argument line="164">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="173" package="LudoDB">
        <name>setUser</name>
        <full_name>setUser</full_name>
        <docblock line="169">
          <description>Set user name for database connection</description>
          <long-description/>
          <tag line="169" name="param" description="" type="\" variable="$user"/>
        </docblock>
        <argument line="173">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="182" package="LudoDB">
        <name>setPassword</name>
        <full_name>setPassword</full_name>
        <docblock line="178">
          <description>Set password for database connection.</description>
          <long-description/>
          <tag line="178" name="param" description="" type="\" variable="$pwd"/>
        </docblock>
        <argument line="182">
          <name>$pwd</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="191" package="LudoDB">
        <name>setDb</name>
        <full_name>setDb</full_name>
        <docblock line="187">
          <description>Set name of database used in database connection.</description>
          <long-description/>
          <tag line="187" name="param" description="" type="\" variable="$dbName"/>
        </docblock>
        <argument line="191">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="200" package="LudoDB">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="196">
          <description>Return specified host for database connection.</description>
          <long-description/>
          <tag line="196" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="208" package="LudoDB">
        <name>getUser</name>
        <full_name>getUser</full_name>
        <docblock line="204">
          <description>Return username for database connection.</description>
          <long-description/>
          <tag line="204" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="215" package="LudoDB">
        <name>getPassword</name>
        <full_name>getPassword</full_name>
        <docblock line="211">
          <description>Return password for database connection.</description>
          <long-description/>
          <tag line="211" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="223" package="LudoDB">
        <name>getDb</name>
        <full_name>getDb</full_name>
        <docblock line="219">
          <description>Return name of database for database connection.</description>
          <long-description/>
          <tag line="219" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="LudoDB">
        <name>tableExists</name>
        <full_name>tableExists</full_name>
        <docblock line="227">
          <description>Returns true if given database table exists.</description>
          <long-description/>
          <tag line="227" name="param" description="" type="\" variable="$tableName"/>
          <tag line="227" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$tableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="241" package="LudoDB">
        <name>countRows</name>
        <full_name>countRows</full_name>
        <docblock line="237">
          <description>countRows is implemented in sub classes.</description>
          <long-description/>
          <tag line="237" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="249" package="LudoDB">
        <name>createDatabase</name>
        <full_name>createDatabase</full_name>
        <docblock line="245">
          <description>Create database with given name</description>
          <long-description/>
          <tag line="245" name="param" description="" type="\" variable="$name"/>
        </docblock>
        <argument line="249">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="LudoDB">
        <name>useDatabase</name>
        <full_name>useDatabase</full_name>
        <docblock line="254">
          <description>Use this databsae.</description>
          <long-description/>
          <tag line="254" name="param" description="" type="\" variable="$name"/>
        </docblock>
        <argument line="258">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="LudoDB">
        <name>databaseExists</name>
        <full_name>databaseExists</full_name>
        <docblock line="264">
          <description>Returns true if database with given name exists.</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
$instance =
if(!LudoDB::getInstance()-&gt;databaseExists('nameOfDatabase')){
     LudoDB::getInstance()-&gt;createDatabase('nameOfDatabase');
}

&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="264" name="param" description="" type="\" variable="$name"/>
          <tag line="264" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="LudoDB">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="282">
          <description>Log SQL - this method is mostly used internally.</description>
          <long-description/>
          <tag line="282" name="param" description="" type="\" variable="$sql"/>
          <tag line="282" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="287">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="287">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="311" package="LudoDB">
        <name>hasConnection</name>
        <full_name>hasConnection</full_name>
        <docblock line="301">
          <description>Returns true if we have a database connection.</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
LudoDB::hasConnection()

&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="301" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBCache.php" hash="7c9c903cd8704bced089860ab66bf563" package="LudoDB">
    <docblock line="2">
      <description>Caching of serialized LudoDBObjects
User: Alf Magne
Date: 28.01.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="LudoDB">
      <extends>\LudoDBModel</extends>
      <name>LudoDBCache</name>
      <full_name>\LudoDBCache</full_name>
      <docblock line="9">
        <description>Cache class used by LudoDBRequestHandler.</description>
        <long-description>&lt;p&gt;This is a LudoDBModel storing data as serialized
strings in the database. When caching is enabled for a service, LudoDBRequestHandler will
attempt to retrieve data from cache before calling the service method. This may save time
for services requiring many SQL queries to complete.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$JSONConfig</name>
        <default>false</default>
        <docblock line="18">
          <description>JSONConfig set to false</description>
          <long-description/>
          <tag line="18" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$config</name>
        <default>array('table' =&gt; 'ludo_db_cache', 'sql' =&gt; "select class_name, cache_key, cache_value from ludo_db_cache where cache_key=?", 'idField' =&gt; 'JSON_key', 'columns' =&gt; array('id' =&gt; array('db' =&gt; 'int auto_increment not null primary key'), 'cache_key' =&gt; array('db' =&gt; 'varchar(512)', 'access' =&gt; 'rw'), 'class_name' =&gt; array('db' =&gt; 'varchar(512)', 'access' =&gt; 'rw'), 'cache_value' =&gt; array('db' =&gt; 'mediumtext', 'access' =&gt; 'rw')), 'indexes' =&gt; array('cache_key', 'class_name'))</default>
        <docblock line="23">
          <description>Config of ludo_db_cache</description>
          <long-description/>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="global" package="Default">
        <name>$JSON</name>
        <default>null</default>
        <docblock line="51">
          <description>Internal JSON cache</description>
          <long-description/>
          <tag line="51" name="var" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="57">
          <description>Creates new LudoDBCache instance.</description>
          <long-description>&lt;p&gt;An empty LudoDBService class is sent to the constructor along
with constructor arguments. The cache class will search for records where "class_name" equals
class of given service and arguments compiled to a key matches cache_key in the database table.&lt;/p&gt;</long-description>
          <tag line="57" name="param" description="" type="\LudoDBService" variable="$resource">
            <type by_reference="false">\LudoDBService</type>
          </tag>
          <tag line="57" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$resource</name>
          <default>null</default>
          <type>\LudoDBService</type>
        </argument>
        <argument line="64">
          <name>$arguments</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="85" package="LudoDB">
        <name>getCacheKey</name>
        <full_name>getCacheKey</full_name>
        <docblock line="79">
          <description>Return cache key based on class name and arguments.</description>
          <long-description/>
          <tag line="79" name="param" description="" type="\" variable="$resourceName"/>
          <tag line="79" name="param" description="" type="\" variable="$arguments"/>
          <tag line="79" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$resourceName</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="LudoDB">
        <name>hasData</name>
        <full_name>hasData</full_name>
        <docblock line="89">
          <description>Returns true if cache data exists.</description>
          <long-description/>
          <tag line="89" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="101" package="LudoDB">
        <name>setClassName</name>
        <full_name>setClassName</full_name>
        <docblock line="97">
          <description>Set class name for new cache record</description>
          <long-description/>
          <tag line="97" name="param" description="" type="\" variable="$name"/>
        </docblock>
        <argument line="101">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="LudoDB">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <docblock line="105">
          <description>Return cache data</description>
          <long-description/>
          <tag line="105" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="LudoDB">
        <name>setKey</name>
        <full_name>setKey</full_name>
        <docblock line="114">
          <description>Set cache_key of new cache record</description>
          <long-description/>
          <tag line="114" name="param" description="" type="\" variable="$key"/>
          <tag line="114" name="return" description="" type="\LudoDBCache">
            <type by_reference="false">\LudoDBCache</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="LudoDB">
        <name>setCache</name>
        <full_name>setCache</full_name>
        <docblock line="124">
          <description>Store service data to cache</description>
          <long-description/>
          <tag line="124" name="param" description="" type="array" variable="$json">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="return" description="" type="\LudoDBCache">
            <type by_reference="false">\LudoDBCache</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$json</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="138" package="LudoDB">
        <name>clearBy</name>
        <full_name>clearBy</full_name>
        <docblock line="134">
          <description>Clear cache records from db where cache_key equals key</description>
          <long-description/>
          <tag line="134" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="148" package="LudoDB">
        <name>clearByClass</name>
        <full_name>clearByClass</full_name>
        <docblock line="144">
          <description>Clear all cache record for given class name / resource.</description>
          <long-description/>
          <tag line="144" name="param" description="" type="\" variable="$className"/>
        </docblock>
        <argument line="148">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBCollection.php" hash="186a0ad65ad15dce5fb2f621f4f397dd" package="LudoDB">
    <docblock line="2">
      <description>LudoDB collection class
User: Alf Magne Kalleland
Date: 19.12.12</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="49" package="LudoDB">
      <extends>\LudoDBIterator</extends>
      <name>LudoDBCollection</name>
      <full_name>\LudoDBCollection</full_name>
      <docblock line="9">
        <description>LudoDBCollection class.</description>
        <long-description>&lt;p&gt;Example of implementation:&lt;/p&gt;

&lt;p&gt;With external config in JSON file:&lt;/p&gt;

&lt;p&gt;PHP:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; class People extends LudoDBCollection
 {
     protected $JSONConfig = true;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JSON in JSONConfig/People.json:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
   "model": "Person",
   "sql": "select firstname, lastname, nick_name, p.zip,c.city from person p left join city c on c.zip = p.zip where p.zip=?",
   "columns": ["firstname", "lastname", "nick_name","zip", "city"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example with internal PHP config:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class DemoCities extends LudoDBCollection
{
   protected $config = array(
       "sql" =&gt; "select * from demo_city order by name",
       "model" =&gt; "DemoCity"
   );
}
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$arguments</name>
        <default/>
        <docblock line="51">
          <description>Lookup value to use when instantiating collection.</description>
          <long-description>&lt;p&gt;This value
is used in join with config['constructBy']&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="LudoDB">
        <name>deleteRecords</name>
        <full_name>deleteRecords</full_name>
        <docblock line="57">
          <description>Delete all database records involved in this collection.</description>
          <long-description>&lt;p&gt;This method requires that the collection
has arguments. Use LudoDB::deleteTab&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="76" package="LudoDB">
        <name>getConfigParserInstance</name>
        <full_name>getConfigParserInstance</full_name>
        <docblock line="72">
          <description>Return instance of config parser for this LudoDBCollection</description>
          <long-description/>
          <tag line="72" name="return" description="" type="\LudoDBCollectionConfigParser|\LudoDBConfigParser">
            <type by_reference="false">\LudoDBCollectionConfigParser</type>
            <type by_reference="false">\LudoDBConfigParser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="LudoDB">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="81">
          <description>Return collection values.</description>
          <long-description>&lt;p&gt;Use $start and $count to specify a limit query.&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="" type="null" variable="$start">
            <type by_reference="false">null</type>
          </tag>
          <tag line="81" name="param" description="" type="null" variable="$count">
            <type by_reference="false">null</type>
          </tag>
          <tag line="81" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$start</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="87">
          <name>$count</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="110" package="LudoDB">
        <name>getValuesUsingModel</name>
        <full_name>getValuesUsingModel</full_name>
        <docblock line="104">
          <description>Return values for a row in the collection using a LudoDBModel as filter/parser.</description>
          <long-description>&lt;p&gt;This will be called when
"model" is set in the config.&lt;/p&gt;</long-description>
          <tag line="104" name="param" description="" type="\LudoDBModel" variable="$model">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
          <tag line="104" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$model</name>
          <default/>
          <type>\LudoDBModel</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="152" package="LudoDB">
        <name>getValuesFromModel</name>
        <full_name>getValuesFromModel</full_name>
        <docblock line="146">
          <description>Return values for a row using LudoDBModel as a parser/filter.</description>
          <long-description/>
          <tag line="146" name="param" description="" type="\LudoDBModel" variable="$model">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
          <tag line="146" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
        <argument line="152">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="LudoDB">
        <name>getCacheKey</name>
        <full_name>getCacheKey</full_name>
        <docblock line="157">
          <description>Return</description>
          <long-description/>
          <tag line="157" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="175" package="LudoDB">
        <name>getColumnValues</name>
        <full_name>getColumnValues</full_name>
        <docblock line="170">
          <description>Return values of a column as array</description>
          <long-description/>
          <tag line="170" name="param" description="" type="String" variable="$column">
            <type by_reference="false">String</type>
          </tag>
          <tag line="170" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="190" package="LudoDB">
        <name>mergeInOthers</name>
        <full_name>mergeInOthers</full_name>
        <docblock line="187">
          <description>Merge in values from other collections</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="226" package="LudoDB">
        <name>getCollectionInstance</name>
        <full_name>getCollectionInstance</full_name>
        <docblock line="221">
          <description>Return a LudoDBCollection for a merged collection.</description>
          <long-description/>
          <tag line="221" name="param" description="" type="\" variable="$className"/>
          <tag line="221" name="return" description="" type="\LudoDBCollection">
            <type by_reference="false">\LudoDBCollection</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBCollectionConfigParser.php" hash="7539b14efd6bc75ce5c4803aa102620a" package="LudoDB">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: Alf Magne
Date: 14.01.13&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends>\LudoDBConfigParser</extends>
      <name>LudoDBCollectionConfigParser</name>
      <full_name>\LudoDBCollectionConfigParser</full_name>
      <docblock line="9">
        <description>Config parser for LudoDBCollection</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$model</name>
        <default>null</default>
        <docblock line="15">
          <description>Internal reference to LudoDBCollection</description>
          <long-description/>
          <tag line="15" name="var" description="" type="\LudoDBCollection">
            <type by_reference="false">\LudoDBCollection</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="25" namespace="global" package="Default">
        <name>$tableName</name>
        <default/>
        <docblock line="21">
          <description>Name of table name for the LudoDBCollection handled by the parser</description>
          <long-description/>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="LudoDB">
        <name>getTableName</name>
        <full_name>getTableName</full_name>
        <docblock line="28">
          <description>Return table name</description>
          <long-description/>
          <tag line="28" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="LudoDB">
        <name>getModel</name>
        <full_name>getModel</full_name>
        <docblock line="42">
          <description>Return LudoDBCollection handled by the parser.</description>
          <long-description/>
          <tag line="42" name="return" description="" type="\LudoDBModel|null">
            <type by_reference="false">\LudoDBModel</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="61" package="LudoDB">
        <name>getModelInstance</name>
        <full_name>getModelInstance</full_name>
        <docblock line="57">
          <description>Return LudoDBCollection instance</description>
          <long-description/>
          <tag line="57" name="return" description="" type="\LudoDBModel">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="LudoDB">
        <name>getGroupBy</name>
        <full_name>getGroupBy</full_name>
        <docblock line="69">
          <description>Return group by config property.</description>
          <long-description/>
          <tag line="69" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="LudoDB">
        <name>getPK</name>
        <full_name>getPK</full_name>
        <docblock line="77">
          <description>Return primary key config property.</description>
          <long-description/>
          <tag line="77" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="LudoDB">
        <name>getFK</name>
        <full_name>getFK</full_name>
        <docblock line="84">
          <description>Return foreign key config property.</description>
          <long-description/>
          <tag line="84" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="LudoDB">
        <name>getChildKey</name>
        <full_name>getChildKey</full_name>
        <docblock line="92">
          <description>Return childKey config property.</description>
          <long-description/>
          <tag line="92" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="LudoDB">
        <name>getMerged</name>
        <full_name>getMerged</full_name>
        <docblock line="99">
          <description>Return merge config property.</description>
          <long-description/>
          <tag line="99" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="LudoDB">
        <name>shouldHideForeignKeys</name>
        <full_name>shouldHideForeignKeys</full_name>
        <docblock line="106">
          <description>Returns true when foreign key column should be hidden from returned rows, i.e.</description>
          <long-description>&lt;p&gt;the hideForeignKeys config property.&lt;/p&gt;</long-description>
          <tag line="106" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="49">singleton.</todo>
    </markers>
  </file>
  <file path="LudoDBConfigParser.php" hash="14338fdf806c3067e4fc373bc51c3846" package="LudoDB">
    <docblock line="2">
      <description>Parser for LudoDBObject
User: Alf Magne
Date: 10.01.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends/>
      <name>LudoDBConfigParser</name>
      <full_name>\LudoDBConfigParser</full_name>
      <docblock line="9">
        <description>Parser of config for LudoDBObject classes.</description>
        <long-description>&lt;p&gt;Instances of this class are created automatically by LudoDB.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="15">
          <description>Config object</description>
          <long-description/>
          <tag line="15" name="var" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="24" namespace="global" package="Default">
        <name>$columnMappingCache</name>
        <default>array()</default>
        <docblock line="20">
          <description>Internal cache of relations between a column method and a column</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Default">
        <name>$aliasMapping</name>
        <default>array()</default>
        <docblock line="26">
          <description>Mapping of alias names of columns - for fast lookup</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$obj</name>
        <default/>
        <docblock line="32">
          <description>Reference to the LudoDBObject the parser is assigned to handle</description>
          <long-description/>
          <tag line="32" name="var" description="" type="\LudoDBObject">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="42" namespace="global" package="Default">
        <name>$extensionClasses</name>
        <default>array()</default>
        <docblock line="38">
          <description>Instances of class</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$customConstructorParams</name>
        <default/>
        <docblock line="44">
          <description>Custom constructor params</description>
          <long-description/>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="global" package="Default">
        <name>$externalCache</name>
        <default>array()</default>
        <docblock line="50">
          <description>Cache of names of external columns.</description>
          <long-description/>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="global" package="Default">
        <name>$myColumns</name>
        <default/>
        <docblock line="56">
          <description>Array of columns of LudoDBObject for this parser.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="619" namespace="global" package="Default">
        <name>$columnAccessCache</name>
        <default>array()</default>
        <docblock line="615">
          <description>Cache of access to columns for fast lookup.</description>
          <long-description/>
          <tag line="615" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="61">
          <description>Constructs new parser.</description>
          <long-description/>
          <tag line="61" name="param" description="" type="\LudoDBObject" variable="$obj">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
          <tag line="61" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$obj</name>
          <default/>
          <type>\LudoDBObject</type>
        </argument>
        <argument line="66">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="76" package="LudoDB">
        <name>parseConfig</name>
        <full_name>parseConfig</full_name>
        <docblock line="72">
          <description>Parse config.</description>
          <long-description/>
          <tag line="72" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$config</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="LudoDB">
        <name>getExtends</name>
        <full_name>getExtends</full_name>
        <docblock line="87">
          <description>Return a LudoDBObject instance this LudoDBObject object extends.</description>
          <long-description>&lt;p&gt;(Only when this class extends another LudoDBObject).&lt;/p&gt;</long-description>
          <tag line="87" name="return" description="" type="\LudoDBObject">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="112" package="LudoDB">
        <name>getConfigFromFile</name>
        <full_name>getConfigFromFile</full_name>
        <docblock line="107">
          <description>Return config from JSON file as array.</description>
          <long-description/>
          <tag line="107" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="127" package="LudoDB">
        <name>getPathToJSONConfig</name>
        <full_name>getPathToJSONConfig</full_name>
        <docblock line="123">
          <description>Return path to JSON config file.</description>
          <long-description/>
          <tag line="123" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="LudoDB">
        <name>getPathToJsonConfigDefaultData</name>
        <full_name>getPathToJsonConfigDefaultData</full_name>
        <docblock line="132">
          <description>Return path to JSON file for default data (name is ClassName.data.json).</description>
          <long-description/>
          <tag line="132" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="LudoDB">
        <name>getFileLocation</name>
        <full_name>getFileLocation</full_name>
        <docblock line="141">
          <description>Return file location of this class.</description>
          <long-description/>
          <tag line="141" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="154" package="LudoDB">
        <name>mapColumnAliases</name>
        <full_name>mapColumnAliases</full_name>
        <docblock line="151">
          <description>Save column alias to cache.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="171" package="LudoDB">
        <name>getMergedConfigs</name>
        <full_name>getMergedConfigs</full_name>
        <docblock line="165">
          <description>Return config of this LudoDBObject with config of parent LudoDBObject.</description>
          <long-description/>
          <tag line="165" name="param" description="" type="\" variable="$config1"/>
          <tag line="165" name="param" description="" type="\" variable="$config2"/>
          <tag line="165" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$config1</name>
          <default/>
          <type/>
        </argument>
        <argument line="171">
          <name>$config2</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="LudoDB">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="182">
          <description>Return config</description>
          <long-description/>
          <tag line="182" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="196" package="LudoDB">
        <name>getValidConfig</name>
        <full_name>getValidConfig</full_name>
        <docblock line="191">
          <description>Return input config validated.</description>
          <long-description/>
          <tag line="191" name="param" description="" type="\" variable="$config"/>
          <tag line="191" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$config</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="LudoDB">
        <name>getTableName</name>
        <full_name>getTableName</full_name>
        <docblock line="217">
          <description>Return table name for LudoDB</description>
          <long-description/>
          <tag line="217" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="LudoDB">
        <name>getConstructorParams</name>
        <full_name>getConstructorParams</full_name>
        <docblock line="226">
          <description>Return constructor params.</description>
          <long-description/>
          <tag line="226" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="LudoDB">
        <name>externalClassNameFor</name>
        <full_name>externalClassNameFor</full_name>
        <docblock line="236">
          <description>Return name of external class for column.</description>
          <long-description/>
          <tag line="236" name="param" description="" type="\" variable="$column"/>
          <tag line="236" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="252" package="LudoDB">
        <name>getColumnProperty</name>
        <full_name>getColumnProperty</full_name>
        <docblock line="246">
          <description>Return a column property from config, example: "db", "references", "alias"</description>
          <long-description/>
          <tag line="246" name="param" description="" type="\" variable="$name"/>
          <tag line="246" name="param" description="" type="\" variable="$property"/>
          <tag line="246" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="252">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="267" package="LudoDB">
        <name>getExternalClassProperty</name>
        <full_name>getExternalClassProperty</full_name>
        <docblock line="261">
          <description>Return config property from external class referenced in config of the LudoDBObject of this class.</description>
          <long-description/>
          <tag line="261" name="param" description="" type="\" variable="$column"/>
          <tag line="261" name="param" description="" type="\" variable="$property"/>
          <tag line="261" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="267">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="282" package="LudoDB">
        <name>isExternalColumn</name>
        <full_name>isExternalColumn</full_name>
        <docblock line="277">
          <description>Returns true if given column is from external LudoDBObject</description>
          <long-description/>
          <tag line="277" name="param" description="" type="\" variable="$name"/>
          <tag line="277" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="282">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="LudoDB">
        <name>getIdField</name>
        <full_name>getIdField</full_name>
        <docblock line="292">
          <description>Return name of id field.</description>
          <long-description/>
          <tag line="292" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="LudoDB">
        <name>isIdAutoIncremented</name>
        <full_name>isIdAutoIncremented</full_name>
        <docblock line="301">
          <description>Returns true if auto increment of id is specified in config.</description>
          <long-description/>
          <tag line="301" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="315" package="LudoDB">
        <name>getDbDefinition</name>
        <full_name>getDbDefinition</full_name>
        <docblock line="310">
          <description>Return db definition of a column, example: "int auto_increment not null primary key"</description>
          <long-description/>
          <tag line="310" name="param" description="" type="\" variable="$column"/>
          <tag line="310" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="LudoDB">
        <name>getSetMethod</name>
        <full_name>getSetMethod</full_name>
        <docblock line="321">
          <description>Return "set" property of a column in config, i.e.</description>
          <long-description>&lt;p&gt;name of set method.&lt;/p&gt;</long-description>
          <tag line="321" name="param" description="" type="\" variable="$column"/>
          <tag line="321" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="326">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="LudoDB">
        <name>getGetMethod</name>
        <full_name>getGetMethod</full_name>
        <docblock line="331">
          <description>Return "get" property of a column in config, i.e.</description>
          <long-description>&lt;p&gt;name of get method.&lt;/p&gt;</long-description>
          <tag line="331" name="param" description="" type="\" variable="$column"/>
          <tag line="331" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="348" package="LudoDB">
        <name>foreignKeyFor</name>
        <full_name>foreignKeyFor</full_name>
        <docblock line="343">
          <description>Return foreign key for a column if exists.</description>
          <long-description/>
          <tag line="343" name="param" description="" type="\" variable="$column"/>
          <tag line="343" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="348">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="LudoDB">
        <name>getIndexes</name>
        <full_name>getIndexes</full_name>
        <docblock line="354">
          <description>Return indexed columns from config.</description>
          <long-description/>
          <tag line="354" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="367" package="LudoDB">
        <name>getDefaultData</name>
        <full_name>getDefaultData</full_name>
        <docblock line="363">
          <description>Get default data for database table.</description>
          <long-description/>
          <tag line="363" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="386" package="LudoDB">
        <name>getJoins</name>
        <full_name>getJoins</full_name>
        <docblock line="382">
          <description>Return array of joined tables</description>
          <long-description/>
          <tag line="382" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="396" package="LudoDB">
        <name>getMyColumnsForSQL</name>
        <full_name>getMyColumnsForSQL</full_name>
        <docblock line="392">
          <description>Return name of my columns prefixed by tableName + .</description>
          <long-description/>
          <tag line="392" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="416" package="LudoDB">
        <name>getJoinsForSQL</name>
        <full_name>getJoinsForSQL</full_name>
        <docblock line="412">
          <description>Return array of names of joined columns prefixed by their table names.</description>
          <long-description/>
          <tag line="412" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="432" package="LudoDB">
        <name>getColumnsToSelectFromJoins</name>
        <full_name>getColumnsToSelectFromJoins</full_name>
        <docblock line="428">
          <description>Return columns to select from joined tables prefixed by their table names.</description>
          <long-description/>
          <tag line="428" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="450" package="LudoDB">
        <name>getColumns</name>
        <full_name>getColumns</full_name>
        <docblock line="446">
          <description>Return array of columns from config.</description>
          <long-description/>
          <tag line="446" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="460" package="LudoDB">
        <name>getPublicColumnName</name>
        <full_name>getPublicColumnName</full_name>
        <docblock line="455">
          <description>Return public column name.</description>
          <long-description>&lt;p&gt;If "alias" is defined in config, that&lt;/p&gt;</long-description>
          <tag line="455" name="param" description="" type="\" variable="$name"/>
          <tag line="455" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="472" package="LudoDB">
        <name>getColumn</name>
        <full_name>getColumn</full_name>
        <docblock line="467">
          <description>Return config of a column</description>
          <long-description/>
          <tag line="467" name="param" description="" type="\" variable="$column"/>
          <tag line="467" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="472">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="483" package="LudoDB">
        <name>getInternalColName</name>
        <full_name>getInternalColName</full_name>
        <docblock line="478">
          <description>Return internal column name, i.e.</description>
          <long-description>&lt;p&gt;key in column config. alias name will be translated to internal names.&lt;/p&gt;</long-description>
          <tag line="478" name="param" description="" type="\" variable="$column"/>
          <tag line="478" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="483">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="LudoDB">
        <name>getOrderBy</name>
        <full_name>getOrderBy</full_name>
        <docblock line="488">
          <description>Return orderBy property from config.</description>
          <long-description/>
          <tag line="488" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="LudoDB">
        <name>hasColumns</name>
        <full_name>hasColumns</full_name>
        <docblock line="497">
          <description>Return true if any columns are defined in config.</description>
          <long-description/>
          <tag line="497" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="LudoDB">
        <name>getTableNamesFromJoins</name>
        <full_name>getTableNamesFromJoins</full_name>
        <docblock line="507">
          <description>Return array of table names for joined columns.</description>
          <long-description/>
          <tag line="507" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="528" package="LudoDB">
        <name>getProperty</name>
        <full_name>getProperty</full_name>
        <docblock line="523">
          <description>Return a config property by key.</description>
          <long-description/>
          <tag line="523" name="param" description="" type="\" variable="$key"/>
          <tag line="523" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="528">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="538" package="LudoDB">
        <name>hasColumn</name>
        <full_name>hasColumn</full_name>
        <docblock line="533">
          <description>Return true if config for given column is defined in config.</description>
          <long-description/>
          <tag line="533" name="param" description="" type="\" variable="$columnName"/>
          <tag line="533" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="538">
          <name>$columnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="548" package="LudoDB">
        <name>getColumnByMethod</name>
        <full_name>getColumnByMethod</full_name>
        <docblock line="543">
          <description>Return name of column by "set" or "get" method.</description>
          <long-description/>
          <tag line="543" name="param" description="" type="\" variable="$methodName"/>
          <tag line="543" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="548">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="569" package="LudoDB">
        <name>saveInMappingCache</name>
        <full_name>saveInMappingCache</full_name>
        <docblock line="563">
          <description>Save mapping between set and get methods and column names in internal cache for fast lookup.</description>
          <long-description/>
          <tag line="563" name="param" description="" type="\" variable="$methodName"/>
          <tag line="563" name="param" description="" type="\" variable="$col"/>
          <tag line="563" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="569">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="569">
          <name>$col</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="584" package="LudoDB">
        <name>getFromMappingCache</name>
        <full_name>getFromMappingCache</full_name>
        <docblock line="579">
          <description>Return column name for given set or get method from mapping cache (fast lookup).</description>
          <long-description/>
          <tag line="579" name="param" description="" type="\" variable="$methodName"/>
          <tag line="579" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="584">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="599" package="LudoDB">
        <name>canWriteTo</name>
        <full_name>canWriteTo</full_name>
        <docblock line="593">
          <description>Returns true if user can write to given column.</description>
          <long-description>&lt;p&gt;This is for the "save" and "setValues" methods of a LudoDBModel. You can
always call $this-&gt;setValue($name, $value) internally in your LudoDBModel classes.&lt;/p&gt;</long-description>
          <tag line="593" name="param" description="" type="\" variable="$name"/>
          <tag line="593" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="599">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="610" package="LudoDB">
        <name>canReadFrom</name>
        <full_name>canReadFrom</full_name>
        <docblock line="604">
          <description>Returns true if user can read value of given column.</description>
          <long-description>&lt;p&gt;This is for the getValues and read methods of a LudoDBModel. You
will get access to column values internally using $this-&gt;getValue($columnName);&lt;/p&gt;</long-description>
          <tag line="604" name="param" description="" type="\" variable="$name"/>
          <tag line="604" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="627" package="LudoDB">
        <name>hasColumnAccess</name>
        <full_name>hasColumnAccess</full_name>
        <docblock line="621">
          <description>Returns true if you have given access (read or write) to given column.</description>
          <long-description/>
          <tag line="621" name="param" description="" type="\" variable="$name"/>
          <tag line="621" name="param" description="" type="\" variable="$access"/>
          <tag line="621" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="627">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="627">
          <name>$access</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="655" package="LudoDB">
        <name>isStaticColumn</name>
        <full_name>isStaticColumn</full_name>
        <docblock line="649">
          <description>Returns true if given column is a static column, i.e.</description>
          <long-description>&lt;p&gt;column not defined in database which should have a static value
defined in config.&lt;/p&gt;</long-description>
          <tag line="649" name="param" description="" type="\" variable="$column"/>
          <tag line="649" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="655">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="665" package="LudoDB">
        <name>getStaticValue</name>
        <full_name>getStaticValue</full_name>
        <docblock line="660">
          <description>Return value of static column.</description>
          <long-description/>
          <tag line="660" name="param" description="" type="\" variable="$column"/>
          <tag line="660" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="665">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="673" package="LudoDB">
        <name>getStaticValues</name>
        <full_name>getStaticValues</full_name>
        <docblock line="669">
          <description>Return array of values for static columns.</description>
          <long-description>&lt;p&gt;Name of column is the key in the returned array.&lt;/p&gt;</long-description>
          <tag line="669" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="685" package="LudoDB">
        <name>getStaticColumns</name>
        <full_name>getStaticColumns</full_name>
        <docblock line="681">
          <description>Return static columns</description>
          <long-description/>
          <tag line="681" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="693" package="LudoDB">
        <name>hasStaticColumns</name>
        <full_name>hasStaticColumns</full_name>
        <docblock line="689">
          <description>Returns true if config has static columns.</description>
          <long-description/>
          <tag line="689" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="702" package="LudoDB">
        <name>canBePopulatedBy</name>
        <full_name>canBePopulatedBy</full_name>
        <docblock line="697">
          <description>Returns true when LudoDBModel can be populated/constructed by this column.</description>
          <long-description/>
          <tag line="697" name="param" description="" type="\" variable="$column"/>
          <tag line="697" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="702">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="720" package="LudoDB">
        <name>getTableReferences</name>
        <full_name>getTableReferences</full_name>
        <docblock line="712">
          <description>Returns references to other tables as array,
example array(
 array('table' =&gt; 'city', 'column' =&gt; 'zip'),
 array('table' =&gt; 'country', 'column' =&gt; 'id')
)</description>
          <long-description/>
          <tag line="712" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="740" package="LudoDB">
        <name>getDefaultValue</name>
        <full_name>getDefaultValue</full_name>
        <docblock line="735">
          <description>Return default value of a column.</description>
          <long-description/>
          <tag line="735" name="param" description="" type="\" variable="$column"/>
          <tag line="735" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="740">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="749" package="LudoDB">
        <name>getDefaultValues</name>
        <full_name>getDefaultValues</full_name>
        <docblock line="745">
          <description>Return default values of all columns.</description>
          <long-description/>
          <tag line="745" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="765" package="LudoDB">
        <name>getLudoJSConfig</name>
        <full_name>getLudoJSConfig</full_name>
        <docblock line="761">
          <description>Returns ludoJS config for database columns and static columns.</description>
          <long-description/>
          <tag line="761" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="777" package="LudoDB">
        <name>getLudoJSOf</name>
        <full_name>getLudoJSOf</full_name>
        <docblock line="772">
          <description>Return LudoJS config of these columns</description>
          <long-description/>
          <tag line="772" name="param" description="" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="772" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="777">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBExceptions.php" hash="337ef660d97b1ff90e79810f0734e144" package="LudoDB">
    <docblock line="2">
      <description>Created by JetBrains PhpStorm.</description>
      <long-description>&lt;p&gt;User: Alf Magne
Date: 30.01.13&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="LudoDB">
      <extends>\Exception</extends>
      <name>LudoDBException</name>
      <full_name>\LudoDBException</full_name>
      <docblock line="10">
        <description>LudoDBException base class</description>
        <long-description/>
        <tag line="10" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$code</name>
        <default>400</default>
        <docblock line="15">
          <description>Exception code</description>
          <long-description/>
          <tag line="15" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="28" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBClassNotFoundException</name>
      <full_name>\LudoDBClassNotFoundException</full_name>
      <docblock line="22">
        <description>Class not found exception.</description>
        <long-description>&lt;p&gt;Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="22" name="package" description="LudoDB"/>
        <tag line="22" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$code</name>
        <default>404</default>
        <docblock line="30">
          <description>Exception code</description>
          <long-description/>
          <tag line="30" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="43" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBObjectNotFoundException</name>
      <full_name>\LudoDBObjectNotFoundException</full_name>
      <docblock line="37">
        <description>Object not found exception.</description>
        <long-description>&lt;p&gt;Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="37" name="package" description="LudoDB"/>
        <tag line="37" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$code</name>
        <default>404</default>
        <docblock line="44">
          <description>Exception code</description>
          <long-description/>
          <tag line="44" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="57" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBConnectionException</name>
      <full_name>\LudoDBConnectionException</full_name>
      <docblock line="51">
        <description>DB Connection error exception.</description>
        <long-description>&lt;p&gt;Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="51" name="package" description="LudoDB"/>
        <tag line="51" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="global" line="67" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBInvalidArgumentsException</name>
      <full_name>\LudoDBInvalidArgumentsException</full_name>
      <docblock line="61">
        <description>Invalid constructor arguments exception.</description>
        <long-description>&lt;p&gt;Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="61" name="package" description="LudoDB"/>
        <tag line="61" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="global" line="76" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBUnauthorizedException</name>
      <full_name>\LudoDBUnauthorizedException</full_name>
      <docblock line="70">
        <description>Unauthorized exception
Thrown by LudoDBRequestHandler</description>
        <long-description/>
        <tag line="70" name="package" description="LudoDB"/>
        <tag line="70" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="81" namespace="global" package="Default">
        <name>$code</name>
        <default>401</default>
        <docblock line="77">
          <description>Exception code</description>
          <long-description/>
          <tag line="77" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="91" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBServiceNotImplementedException</name>
      <full_name>\LudoDBServiceNotImplementedException</full_name>
      <docblock line="84">
        <description>Service not implemented exception.</description>
        <long-description>&lt;p&gt;Executed when a service is returned from getValidServices, but
the service method is not implemented.
Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="84" name="package" description="LudoDB"/>
        <tag line="84" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="96" namespace="global" package="Default">
        <name>$code</name>
        <default>404</default>
        <docblock line="92">
          <description>Exception code</description>
          <long-description/>
          <tag line="92" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="106" package="LudoDB">
      <extends>\Exception</extends>
      <name>LudoDBInvalidServiceException</name>
      <full_name>\LudoDBInvalidServiceException</full_name>
      <docblock line="100">
        <description>Invalid service exception.</description>
        <long-description>&lt;p&gt;Executed on call for service name not returned by getValidServices.
Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="100" name="package" description="LudoDB"/>
        <tag line="100" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="111" namespace="global" package="Default">
        <name>$code</name>
        <default>405</default>
        <docblock line="107">
          <description>Exception code</description>
          <long-description/>
          <tag line="107" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="120" package="LudoDB">
      <extends>\LudoDBException</extends>
      <name>LudoDBInvalidConfigException</name>
      <full_name>\LudoDBInvalidConfigException</full_name>
      <docblock line="114">
        <description>Invalid Config Exception.</description>
        <long-description>&lt;p&gt;Executed on invalid configuration of LudoDB classes
Thrown by LudoDBRequestHandler&lt;/p&gt;</long-description>
        <tag line="114" name="package" description="LudoDB"/>
        <tag line="114" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
    </class>
  </file>
  <file path="LudoDBInterfaces.php" hash="8e4c01510565440504b9c8658e6190c7" package="LudoDB">
    <docblock line="2">
      <description>LudoDB interfaces
User: Alf Magne
Date: 31.01.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <interface namespace="global" line="14" package="LudoDB">
      <name>LudoDBAdapter</name>
      <full_name>\LudoDBAdapter</full_name>
      <docblock line="10">
        <description>Interface for LudoDB database connection adapters</description>
        <long-description/>
        <tag line="10" name="package" description="LudoDB"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="LudoDB">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="16">
          <description>Connect to database</description>
          <long-description/>
          <tag line="16" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="LudoDB">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="22">
          <description>Execute a query and return resource</description>
          <long-description/>
          <tag line="22" name="param" description="" type="\" variable="$sql"/>
          <tag line="22" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="LudoDB">
        <name>one</name>
        <full_name>one</full_name>
        <docblock line="30">
          <description>Execute query and return first row.</description>
          <long-description/>
          <tag line="30" name="param" description="" type="\" variable="$sql"/>
          <tag line="30" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="36">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="LudoDB">
        <name>countRows</name>
        <full_name>countRows</full_name>
        <docblock line="38">
          <description>Return number of rows for given SQL with given params (for prepared statements).</description>
          <long-description>&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$count = LudoDB::getInstance()-&gt;countRows("select * from city where country=?", array("Norway"));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="38" name="param" description="" type="\" variable="$sql"/>
          <tag line="38" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="LudoDB">
        <name>getInsertId</name>
        <full_name>getInsertId</full_name>
        <docblock line="53">
          <description>Return id of last inserted record</description>
          <long-description/>
          <tag line="53" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="LudoDB">
        <name>nextRow</name>
        <full_name>nextRow</full_name>
        <docblock line="59">
          <description>Return next row in result set.</description>
          <long-description/>
          <tag line="59" name="param" description="" type="\" variable="$result"/>
          <tag line="59" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="LudoDB">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="66">
          <description>Return value of first column in first row of query.</description>
          <long-description/>
          <tag line="66" name="param" description="" type="\" variable="$sql"/>
          <tag line="66" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="72">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="LudoDB">
        <name>escapeString</name>
        <full_name>escapeString</full_name>
        <docblock line="74">
          <description>Escape string to be inserted into the database</description>
          <long-description/>
          <tag line="74" name="param" description="" type="\" variable="$string"/>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
    <interface namespace="global" line="92" package="LudoDB">
      <name>LudoDBService</name>
      <full_name>\LudoDBService</full_name>
      <docblock line="82">
        <description>Classes for request handlers has to implement the LudoDBService interface</description>
        <long-description>&lt;p&gt;The class also needs to implement a static function called getValidServices
which returns an array of valid services, example array('read','save','delete');
Methods with these names also has to be implemented. "read", "save" and "delete"
are already implemented for LudoDBModel.&lt;/p&gt;</long-description>
        <tag line="82" name="package" description="LudoDB"/>
        <tag line="82" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="LudoDB">
        <name>validateArguments</name>
        <full_name>validateArguments</full_name>
        <docblock line="94">
          <description>Returns true is passed arguments are acceptable for the constructor.</description>
          <long-description/>
          <tag line="94" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="94" name="param" description="" type="Array" variable="$arguments">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="94" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="LudoDB">
        <name>validateServiceData</name>
        <full_name>validateServiceData</full_name>
        <docblock line="102">
          <description>Validate data sent to service method</description>
          <long-description/>
          <tag line="102" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="LudoDB">
        <name>shouldCache</name>
        <full_name>shouldCache</full_name>
        <docblock line="110">
          <description>Return true to enable caching in LudoDBRequest handler for the read service.</description>
          <long-description>&lt;p&gt;When true a serialized version of LudoDBModel::read will
be stored in a caching table. When caching is enabled,
you should also implement clearCache() to clear cache in
case Data has been changed.&lt;/p&gt;</long-description>
          <tag line="110" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="LudoDB">
        <name>getValidServices</name>
        <full_name>getValidServices</full_name>
        <docblock line="121">
          <description>Return array with names of valid services</description>
          <long-description/>
          <tag line="121" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="LudoDB">
        <name>getOnSuccessMessageFor</name>
        <full_name>getOnSuccessMessageFor</full_name>
        <docblock line="127">
          <description>Return on success message for given service</description>
          <long-description/>
          <tag line="127" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="127" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="LudoDBIterator.php" hash="b175aa4fd4fc97193560be770c5b6486" package="LudoDB">
    <docblock line="2">
      <description>User: Alf Magne Kalleland
Date: 21.12.12</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends>\LudoDBObject</extends>
      <implements>\Iterator</implements>
      <name>LudoDBIterator</name>
      <full_name>\LudoDBIterator</full_name>
      <docblock line="9">
        <description>Iterator class for LudoDBCollection</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$loaded</name>
        <default/>
        <docblock line="15">
          <description>true when resource ref has been created</description>
          <long-description/>
          <tag line="15" name="var" description="" type="\"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$dbResource</name>
        <default/>
        <docblock line="20">
          <description>DB query resource reference</description>
          <long-description/>
          <tag line="20" name="var" description="" type="\"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="global" package="Default">
        <name>$isValid</name>
        <default/>
        <docblock line="25">
          <description>is valid, i.e.</description>
          <long-description>&lt;p&gt;has a row&lt;/p&gt;</long-description>
          <tag line="25" name="var" description="" type="\"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$position</name>
        <default/>
        <docblock line="30">
          <description>Internal position reference</description>
          <long-description/>
          <tag line="30" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$currentRow</name>
        <default/>
        <docblock line="35">
          <description>Current row</description>
          <long-description/>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$rows</name>
        <default/>
        <docblock line="40">
          <description>Array of returned rows.</description>
          <long-description/>
          <tag line="40" name="var" description="" type="\"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="global" package="Default">
        <name>$valueCache</name>
        <default/>
        <docblock line="46">
          <description>Internal data cache</description>
          <long-description/>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="LudoDB">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="52">
          <description>Rewind iterator, i.e.</description>
          <long-description>&lt;p&gt;start from beginning.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="LudoDB">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="64">
          <description>Return current value when iterating collection</description>
          <long-description/>
          <tag line="64" name="method" description="current" type="\" method_name=""/>
          <tag line="64" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="LudoDB">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="73">
          <description>Return key used for iterator.</description>
          <long-description>&lt;p&gt;default is numeric.&lt;/p&gt;</long-description>
          <tag line="73" name="method" description="key" type="\" method_name=""/>
          <tag line="73" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="example" description="function key(){&#13;&#10;return $this-&gt;currentRow['key']&#13;&#10;}&#13;&#10;to return key"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="LudoDB">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="87">
          <description>Go to next row.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="LudoDB">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="96">
          <description>Returns true when</description>
          <long-description/>
          <tag line="96" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="110" package="LudoDB">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="107">
          <description>Execute query and get result set reference.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="LudoDB">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="117">
          <description>Return collection data</description>
          <long-description/>
          <tag line="117" name="method" description="getValues" type="\" method_name=""/>
          <tag line="117" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="150" package="LudoDB">
        <name>storeRow</name>
        <full_name>storeRow</full_name>
        <docblock line="146">
          <description>Append current row to stored rows.</description>
          <long-description/>
          <tag line="146" name="param" description="" type="\" variable="$row"/>
        </docblock>
        <argument line="150">
          <name>$row</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="160" package="LudoDB">
        <name>getRowsAssoc</name>
        <full_name>getRowsAssoc</full_name>
        <docblock line="155">
          <description>Return rows as associated array where key is the value of one column.</description>
          <long-description/>
          <tag line="155" name="param" description="" type="\" variable="$key"/>
          <tag line="155" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="LudoDB">
        <name>getRows</name>
        <full_name>getRows</full_name>
        <docblock line="171">
          <description>Returns reference to all tree nodes as numeric array</description>
          <long-description/>
          <tag line="171" name="return" description="" type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="182" package="LudoDB">
        <name>clearStoredRows</name>
        <full_name>clearStoredRows</full_name>
        <docblock line="179">
          <description>Clear internal row array</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="123">checkout the difference between $this-&gt;valueCache and $this-&gt;rows</todo>
    </markers>
  </file>
  <file path="LudoDBModel.php" hash="408cae5205c205a52d083a550c3ee689" package="LudoDB">
    <docblock line="2">
      <description>Representation of a ludoDB table</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="12" package="LudoDB">
      <extends>\LudoDBObject</extends>
      <name>LudoDBModel</name>
      <full_name>\LudoDBModel</full_name>
      <docblock line="7">
        <description>Abstract LudoDBModel class</description>
        <long-description/>
        <tag line="7" name="package" description="LudoDB"/>
        <tag line="7" name="example" description="examples/cities/DemoCity.php"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock line="14">
          <description>Record data</description>
          <long-description/>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$updates</name>
        <default/>
        <docblock line="19">
          <description>Uncommited data</description>
          <long-description/>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="global" package="Default">
        <name>$externalClasses</name>
        <default>array()</default>
        <docblock line="24">
          <description>Array of external class references</description>
          <long-description/>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$commitDisabled</name>
        <default/>
        <docblock line="29">
          <description>True when commit has been disabled, i.e.</description>
          <long-description>&lt;p&gt;no saving will be done
for this object.&lt;/p&gt;</long-description>
          <tag line="29" name="var" description="" type="\"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$populated</name>
        <default>false</default>
        <docblock line="36">
          <description>True when object has been populated with data from db</description>
          <long-description/>
          <tag line="36" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="global" package="Default">
        <name>$riskyQuery</name>
        <default/>
        <docblock line="42">
          <description>Risky delete table data or drop table sql query waiting for execution.</description>
          <long-description/>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="51" package="LudoDB">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="48">
          <description>Populate with data from db</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="67" package="LudoDB">
        <name>getValidArguments</name>
        <full_name>getValidArguments</full_name>
        <docblock line="62">
          <description>Validates constructor arguments.</description>
          <long-description/>
          <tag line="62" name="param" description="" type="\" variable="$params"/>
          <tag line="62" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="82" package="LudoDB">
        <name>getValidArgument</name>
        <full_name>getValidArgument</full_name>
        <docblock line="76">
          <description>Return valid value for argument with given name</description>
          <long-description/>
          <tag line="76" name="param" description="" type="\" variable="$key"/>
          <tag line="76" name="param" description="" type="\" variable="$value"/>
          <tag line="76" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="LudoDB">
        <name>populateWith</name>
        <full_name>populateWith</full_name>
        <docblock line="87">
          <description>Populate model with these data</description>
          <long-description/>
          <tag line="87" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="113" package="LudoDB">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="98">
          <description>Return column value.</description>
          <long-description>&lt;p&gt;This method will return
* Uncommitted value if exists or value from db
* Value from external models/collection
* Value of static columns
* Default values.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function getFirstname(){
     return $this-&gt;getValue('firstname');
}
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="98" name="param" description="" type="\" variable="$column"/>
          <tag line="98" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="131" package="LudoDB">
        <name>autoPopulate</name>
        <full_name>autoPopulate</full_name>
        <docblock line="128">
          <description>Auto populate model with data from db.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="143" package="LudoDB">
        <name>getExternalValue</name>
        <full_name>getExternalValue</full_name>
        <docblock line="138">
          <description>Return external value</description>
          <long-description/>
          <tag line="138" name="param" description="" type="\" variable="$column"/>
          <tag line="138" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="154" package="LudoDB">
        <name>getExternalClassFor</name>
        <full_name>getExternalClassFor</full_name>
        <docblock line="149">
          <description>Return external class reference for external column</description>
          <long-description/>
          <tag line="149" name="param" description="" type="String" variable="$column">
            <type by_reference="false">String</type>
          </tag>
          <tag line="149" name="return" description="table" type="\LudoDBCollection">
            <type by_reference="false">\LudoDBCollection</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="183" package="LudoDB">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="170">
          <description>Set a column value.</description>
          <long-description>&lt;p&gt;This value will not be committed to db until
a call to commit is made.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function setFirstName($name){
     $this-&gt;setValue('firstname', $name');
}
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="170" name="param" description="" type="\" variable="$column"/>
          <tag line="170" name="param" description="" type="\" variable="$value"/>
          <tag line="170" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="200" package="LudoDB">
        <name>setExternalValue</name>
        <full_name>setExternalValue</full_name>
        <docblock line="195">
          <description>Update column value of external column</description>
          <long-description/>
          <tag line="195" name="param" description="" type="\" variable="$column"/>
          <tag line="195" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="200">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="200">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="LudoDB">
        <name>disableCommit</name>
        <full_name>disableCommit</full_name>
        <docblock line="208">
          <description>Disable commit for this object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="LudoDB">
        <name>enableCommit</name>
        <full_name>enableCommit</full_name>
        <docblock line="216">
          <description>Enable commit for this object.</description>
          <long-description>&lt;p&gt;commit is by default enabled&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="236" package="LudoDB">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="224">
          <description>Commit changes to the database.</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$person = new Person();
$person-&gt;setFirstname('John');
$person-&gt;setLastname('Johnson');
$person-&gt;commit();
echo $person-&gt;getId();
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="224" name="return" description="" type="null|void">
            <type by_reference="false">null</type>
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="266" package="LudoDB">
        <name>commitExternal</name>
        <full_name>commitExternal</full_name>
        <docblock line="262">
          <description>Execute commit on classes for external columns.</description>
          <long-description/>
          <tag line="262" name="param" description="" type="\LudoDBObject" variable="$class">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="274" package="LudoDB">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="271">
          <description>Internal update method</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="LudoDB">
        <name>getUncommitted</name>
        <full_name>getUncommitted</full_name>
        <docblock line="283">
          <description>Return uncommited data</description>
          <long-description/>
          <tag line="283" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="295" package="LudoDB">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="292">
          <description>Private insert method</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="308" package="LudoDB">
        <name>beforeUpdate</name>
        <full_name>beforeUpdate</full_name>
        <docblock line="304">
          <description>Method executed before record is updated</description>
          <long-description/>
          <tag line="304" name="method" description="beforeUpdate" type="\" method_name=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="316" package="LudoDB">
        <name>beforeInsert</name>
        <full_name>beforeInsert</full_name>
        <docblock line="312">
          <description>Method executed before new record is saved in db</description>
          <long-description/>
          <tag line="312" name="method" description="beforeInsert" type="\" method_name=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="LudoDB">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <docblock line="320">
          <description>Rollback updates</description>
          <long-description/>
          <tag line="320" name="method" description="rollback" type="\" method_name=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="333" package="LudoDB">
        <name>setId</name>
        <full_name>setId</full_name>
        <docblock line="329">
          <description>Update id field</description>
          <long-description/>
          <tag line="329" name="param" description="" type="\" variable="$id"/>
        </docblock>
        <argument line="333">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="LudoDB">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="342">
          <description>Return id of current record.</description>
          <long-description/>
          <tag line="342" name="return" description="" type="string|int|null">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="LudoDB">
        <name>createTable</name>
        <full_name>createTable</full_name>
        <docblock line="353">
          <description>Create DB table</description>
          <long-description/>
          <tag line="353" name="method" description="createTable" type="\" method_name=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="368" package="LudoDB">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="364">
          <description>Returns true if database table exists.</description>
          <long-description/>
          <tag line="364" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="LudoDB">
        <name>drop</name>
        <full_name>drop</full_name>
        <docblock line="375">
          <description>Drop database table.</description>
          <long-description>&lt;p&gt;You need to call yesImSure afterwards.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$person = new Person();
$person-&gt;drop()-&gt;yesImSure();
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="375" name="method" description="drop" type="\" method_name=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="401" package="LudoDB">
        <name>deleteTableData</name>
        <full_name>deleteTableData</full_name>
        <docblock line="392">
          <description>Delete all data from this table.</description>
          <long-description>&lt;p&gt;You need to call yesImSure afterwards.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$person = new Person();
$person-&gt;deleteTableData()-&gt;yesImSure();
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="392" name="return" description="" type="\LudoDBModel">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="413" package="LudoDB">
        <name>yesImSure</name>
        <full_name>yesImSure</full_name>
        <docblock line="407">
          <description>Executes drop or deleteTableData</description>
          <long-description/>
          <tag line="407" name="example" description="$p = new Person();&#13;&#10;$p-&gt;drop()-&gt;yesImSure();"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="429" package="LudoDB">
        <name>createIndexes</name>
        <full_name>createIndexes</full_name>
        <docblock line="426">
          <description>Create database indexes defined in table config</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="443" package="LudoDB">
        <name>getIndexName</name>
        <full_name>getIndexName</full_name>
        <docblock line="438">
          <description>Returns unique index name</description>
          <long-description/>
          <tag line="438" name="param" description="" type="\" variable="$field"/>
          <tag line="438" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="451" package="LudoDB">
        <name>insertDefaultData</name>
        <full_name>insertDefaultData</full_name>
        <docblock line="448">
          <description>Populate database table with default data defined in table config</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="469" package="LudoDB">
        <name>getNewInstance</name>
        <full_name>getNewInstance</full_name>
        <docblock line="464">
          <description>Return new instance of this LudoDBModel</description>
          <long-description/>
          <tag line="464" name="method" description="getClassName" type="\" method_name=""/>
          <tag line="464" name="return" description="class" type="\LudoDBModel">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="LudoDB">
        <name>getSomeValuesFiltered</name>
        <full_name>getSomeValuesFiltered</full_name>
        <docblock line="475">
          <description>Return key-pair values with null values removed.</description>
          <long-description/>
          <tag line="475" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="475" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="LudoDB">
        <name>getSomeValues</name>
        <full_name>getSomeValues</full_name>
        <docblock line="485">
          <description>Return model values.</description>
          <long-description/>
          <tag line="485" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="490">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="502" package="LudoDB">
        <name>some</name>
        <full_name>some</full_name>
        <docblock line="495">
          <description>Return values for these keys.</description>
          <long-description>&lt;p&gt;When $filtered is true, onlye
columns with values(not null) will be returned.&lt;/p&gt;</long-description>
          <tag line="495" name="param" description="" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="495" name="param" description="" type="bool" variable="$filtered">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="495" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="502">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="502">
          <name>$filtered</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="519" package="LudoDB">
        <name>clearValues</name>
        <full_name>clearValues</full_name>
        <docblock line="516">
          <description>Clear data from model.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="529" package="LudoDB">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="525">
          <description>Return value of public columns</description>
          <long-description/>
          <tag line="525" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="550" package="LudoDB">
        <name>getJoinColumns</name>
        <full_name>getJoinColumns</full_name>
        <docblock line="546">
          <description>Return values from joined columns.</description>
          <long-description/>
          <tag line="546" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="567" package="LudoDB">
        <name>isValid</name>
        <full_name>isValid</full_name>
        <docblock line="563">
          <description>Return true if update and save is allowed to run.</description>
          <long-description/>
          <tag line="563" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="LudoDB">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="572">
          <description>Creates magic get and set methods for columns.</description>
          <long-description>&lt;p&gt;Example
columns "firstname" will have it's own "getFirstname" and "setFirstname" method.&lt;/p&gt;</long-description>
          <tag line="572" name="param" description="" type="\" variable="$name"/>
          <tag line="572" name="param" description="" type="\" variable="$arguments"/>
          <tag line="572" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
          <tag line="572" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="580">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="610" package="LudoDB">
        <name>setValues</name>
        <full_name>setValues</full_name>
        <docblock line="597">
          <description>Populate columns you can write to with these data</description>
          <long-description/>
          <tag line="597" name="example" description=":&#13;&#10;&lt;code&gt;&#13;&#10;$person = new Person(1);&#13;&#10;$person-&gt;populate(array(&#13;&#10; &quot;firstname&quot; =&gt; &quot;Jane&quot;, &quot;lastname&quot; =&gt; &quot;Johnson&quot;&#13;&#10;));&#13;&#10;$person-&gt;commit();&#13;&#10;&lt;/code&gt;"/>
          <tag line="597" name="param" description="" type="\" variable="$data"/>
          <tag line="597" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="633" package="LudoDB">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="622">
          <description>Populate and save data.</description>
          <long-description>&lt;p&gt;Returns array "&lt;idField&gt;" =&gt; "&lt;id&gt;"
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$city = new City();
$data = $city-&gt;save(array("city" =&gt; "Stavanger", "country" =&gt; "Norway"));
var_dump($data);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="622" name="param" description="" type="\" variable="$data"/>
          <tag line="622" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="633">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="648" package="LudoDB">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="645">
          <description>Delete record</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBMySqlI.php" hash="537653fa5dfaf47a510695926170572b" package="LudoDB">
    <docblock line="2">
      <description>User: Alf Magne
Date: 01.02.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="LudoDB">
      <extends>\LudoDB</extends>
      <implements>\LudoDBAdapter</implements>
      <name>LudoDBMySqlI</name>
      <full_name>\LudoDBMySqlI</full_name>
      <docblock line="8">
        <description>MysqlI adapter.</description>
        <long-description>&lt;p&gt;PDO is the preferred adapter and should be used
when supported by the server.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="LudoDB"/>
        <tag line="8" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="20" namespace="global" package="Default">
        <name>$conn</name>
        <default/>
        <docblock line="16">
          <description>Database connection resource reference</description>
          <long-description/>
          <tag line="16" name="var" description="" type="\mysqli">
            <type by_reference="false">\mysqli</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="LudoDB">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="22">
          <description>Connect to database</description>
          <long-description/>
          <tag line="22" name="return" description="" type="mixed|void">
            <type by_reference="false">mixed</type>
            <type by_reference="false">void</type>
          </tag>
          <tag line="22" name="throws" description="" type="\LudoDBConnectionException">
            <type by_reference="false">\LudoDBConnectionException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="LudoDB">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="40">
          <description>Execute query and return resource.</description>
          <long-description/>
          <tag line="40" name="param" description="" type="\" variable="$sql"/>
          <tag line="40" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="return" description="" type="bool|\mysqli_result">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
          </tag>
          <tag line="40" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="LudoDB">
        <name>one</name>
        <full_name>one</full_name>
        <docblock line="62">
          <description>Get one row</description>
          <long-description/>
          <tag line="62" name="param" description="" type="\" variable="$sql"/>
          <tag line="62" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="LudoDB">
        <name>countRows</name>
        <full_name>countRows</full_name>
        <docblock line="78">
          <description>Return number of rows for given query with given arguments.</description>
          <long-description/>
          <tag line="78" name="param" description="" type="\" variable="$sql"/>
          <tag line="78" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="LudoDB">
        <name>getInsertId</name>
        <full_name>getInsertId</full_name>
        <docblock line="90">
          <description>Get last insert id</description>
          <long-description/>
          <tag line="90" name="method" description="getInsertId" type="\" method_name=""/>
          <tag line="90" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="LudoDB">
        <name>nextRow</name>
        <full_name>nextRow</full_name>
        <docblock line="100">
          <description>Return reference to next row in result set.</description>
          <long-description/>
          <tag line="100" name="param" description="" type="\mysqli_result|resource|\PDOStatement" variable="$result">
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="100" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="LudoDB">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="110">
          <description>Return value of first column of first row.</description>
          <long-description/>
          <tag line="110" name="param" description="" type="\" variable="$sql"/>
          <tag line="110" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="LudoDB">
        <name>escapeString</name>
        <full_name>escapeString</full_name>
        <docblock line="123">
          <description>Return safe string for insertion into database.</description>
          <long-description/>
          <tag line="123" name="param" description="" type="\" variable="$string"/>
          <tag line="123" name="return" description="" type="mixed|string">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBMysql.php" hash="c3dab373e1560ae73da521e8cdab84ab" package="LudoDB">
    <docblock line="2">
      <description>User: Alf Magne
Date: 01.02.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends>\LudoDB</extends>
      <implements>\LudoDBAdapter</implements>
      <name>LudoDBMysql</name>
      <full_name>\LudoDBMysql</full_name>
      <docblock line="8">
        <description>Mysql adapter.</description>
        <long-description>&lt;p&gt;Should only be used when neither
PDO or MySqlI is supported on the server.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="LudoDB"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="LudoDB">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="15">
          <description>Connect to database</description>
          <long-description/>
          <tag line="15" name="throws" description="" type="\LudoDBConnectionException">
            <type by_reference="false">\LudoDBConnectionException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="LudoDB">
        <name>escapeString</name>
        <full_name>escapeString</full_name>
        <docblock line="29">
          <description>Return safe string for insertion into database.</description>
          <long-description/>
          <tag line="29" name="param" description="" type="int|string|bool|null" variable="$string">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="29" name="return" description="" type="int|string|bool|null">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="LudoDB">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="39">
          <description>Execute query and return resource.</description>
          <long-description/>
          <tag line="39" name="param" description="" type="\" variable="$sql"/>
          <tag line="39" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="" type="bool|\mysqli_result|resource|\PDOStatement">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="39" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="LudoDB">
        <name>one</name>
        <full_name>one</full_name>
        <docblock line="59">
          <description>Get one row.</description>
          <long-description/>
          <tag line="59" name="param" description="" type="\" variable="$sql"/>
          <tag line="59" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="65">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="LudoDB">
        <name>countRows</name>
        <full_name>countRows</full_name>
        <docblock line="75">
          <description>Return number of rows.</description>
          <long-description/>
          <tag line="75" name="param" description="" type="\" variable="$sql"/>
          <tag line="75" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="LudoDB">
        <name>getInsertId</name>
        <full_name>getInsertId</full_name>
        <docblock line="87">
          <description>Get last insert id</description>
          <long-description/>
          <tag line="87" name="method" description="getInsertId" type="\" method_name=""/>
          <tag line="87" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="LudoDB">
        <name>nextRow</name>
        <full_name>nextRow</full_name>
        <docblock line="97">
          <description>Go to next row</description>
          <long-description/>
          <tag line="97" name="param" description="" type="\mysqli_result|resource|\PDOStatement" variable="$result">
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="97" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="LudoDB">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="107">
          <description>Return value of first column in a query</description>
          <long-description/>
          <tag line="107" name="param" description="" type="\" variable="$sql"/>
          <tag line="107" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="113">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBObject.php" hash="c68e6aeea027502678546950f6bff362" package="LudoDB">
    <docblock line="2">
      <description>Base class for LudoDB models and collections.</description>
      <long-description>&lt;p&gt;User: Alf Magne Kalleland
Date: 20.12.12&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="14" package="LudoDB">
      <extends/>
      <name>LudoDBObject</name>
      <full_name>\LudoDBObject</full_name>
      <docblock line="9">
        <description>Base class for LudoDBModel and LudoDBCollection</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$db</name>
        <default/>
        <docblock line="16">
          <description>Internal LudoDB instance.</description>
          <long-description/>
          <tag line="16" name="var" description="" type="\LudoDB">
            <type by_reference="false">\LudoDB</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$arguments</name>
        <default/>
        <docblock line="21">
          <description>Constructor arguments</description>
          <long-description/>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="30" namespace="global" package="Default">
        <name>$configParsers</name>
        <default>array()</default>
        <docblock line="26">
          <description>Internal cache of config parsers for LudoDBObjects.</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$JSONConfig</name>
        <default>false</default>
        <docblock line="32">
          <description>True when config is in JSONConfig/&lt;class name&gt;.json file</description>
          <long-description/>
          <tag line="32" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$sql_handler</name>
        <default/>
        <docblock line="38">
          <description>Internal reference to LudoDBSql</description>
          <long-description/>
          <tag line="38" name="var" description="" type="\LudoDBSql">
            <type by_reference="false">\LudoDBSql</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="44">
          <description>LudoDB config</description>
          <long-description/>
          <tag line="44" name="example" description="examples/cities/DemoCity.php"/>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$parser</name>
        <default/>
        <docblock line="69">
          <description>Internal reference to config parser</description>
          <long-description/>
          <tag line="69" name="var" description="" type="\LudoDBCollectionConfigParser|\LudoDBConfigParser">
            <type by_reference="false">\LudoDBCollectionConfigParser</type>
            <type by_reference="false">\LudoDBConfigParser</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="177" namespace="global" package="Default">
        <name>$configParserKey</name>
        <default/>
        <docblock line="173">
          <description>The key of this class in the static $configParsers cache array.</description>
          <long-description/>
          <tag line="173" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="LudoDB">
        <name>getValidServices</name>
        <full_name>getValidServices</full_name>
        <docblock line="51">
          <description>Valid public services offered by this class, example "read", "delete" and "save"</description>
          <long-description/>
          <tag line="51" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="LudoDB">
        <name>getOnSuccessMessageFor</name>
        <full_name>getOnSuccessMessageFor</full_name>
        <docblock line="60">
          <description>LudoDBService getOnSuccessMessageFor method.</description>
          <long-description>&lt;p&gt;By default, it returns an empty string.&lt;/p&gt;</long-description>
          <tag line="60" name="param" description="" type="\" variable="$service"/>
          <tag line="60" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Constructs a new LudoDBModel/LudoDBCollection</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="92" package="LudoDB">
        <name>sqlHandler</name>
        <full_name>sqlHandler</full_name>
        <docblock line="88">
          <description>Return SQL handler</description>
          <long-description/>
          <tag line="88" name="return" description="" type="\LudoDBSql">
            <type by_reference="false">\LudoDBSql</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="105" package="LudoDB">
        <name>escapeArguments</name>
        <full_name>escapeArguments</full_name>
        <docblock line="100">
          <description>Escape constructor arguments.</description>
          <long-description/>
          <tag line="100" name="param" description="" type="\" variable="$values"/>
          <tag line="100" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="117" package="LudoDB">
        <name>onConstruct</name>
        <full_name>onConstruct</full_name>
        <docblock line="114">
          <description>On construct method which can be implemented by sub classes.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="LudoDB">
        <name>hasConfigInExternalFile</name>
        <full_name>hasConfigInExternalFile</full_name>
        <docblock line="122">
          <description>Returns true if config is defined in external file.</description>
          <long-description/>
          <tag line="122" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="LudoDB">
        <name>getConstructorValues</name>
        <full_name>getConstructorValues</full_name>
        <docblock line="131">
          <description>Return array of values sent to constructor.</description>
          <long-description/>
          <tag line="131" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="LudoDB">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="140">
          <description>Commit method implemented by sub classes.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="LudoDB">
        <name>configParser</name>
        <full_name>configParser</full_name>
        <docblock line="148">
          <description>Return reference to config parser.</description>
          <long-description/>
          <tag line="148" name="return" description="" type="\LudoDBConfigParser|\LudoDBCollectionConfigParser">
            <type by_reference="false">\LudoDBConfigParser</type>
            <type by_reference="false">\LudoDBCollectionConfigParser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="168" package="LudoDB">
        <name>getConfigParserInstance</name>
        <full_name>getConfigParserInstance</full_name>
        <docblock line="164">
          <description>Return config parser instance.</description>
          <long-description/>
          <tag line="164" name="return" description="" type="\LudoDBConfigParser">
            <type by_reference="false">\LudoDBConfigParser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="183" package="LudoDB">
        <name>getConfigParserKey</name>
        <full_name>getConfigParserKey</full_name>
        <docblock line="179">
          <description>Return config parser key of this class.</description>
          <long-description/>
          <tag line="179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="194" package="LudoDB">
        <name>clearParsers</name>
        <full_name>clearParsers</full_name>
        <docblock line="191">
          <description>Clear all cached config parsers</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="LudoDB">
        <name>getUncommitted</name>
        <full_name>getUncommitted</full_name>
        <docblock line="199">
          <description>Return uncommitted data.</description>
          <long-description>&lt;p&gt;This method is implemented in LudoDBModel.&lt;/p&gt;</long-description>
          <tag line="199" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="LudoDB">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="208">
          <description>Implemented by sub classes.</description>
          <long-description/>
          <tag line="208" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="LudoDB">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="217">
          <description>Return data as JSON string.</description>
          <long-description/>
          <tag line="217" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="LudoDB">
        <name>asJSON</name>
        <full_name>asJSON</full_name>
        <docblock line="226">
          <description>Return data as JSON.</description>
          <long-description/>
          <tag line="226" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="LudoDB">
        <name>shouldCache</name>
        <full_name>shouldCache</full_name>
        <docblock line="235">
          <description>When handled by LudoDBRequestHandler no services will by default be cached.</description>
          <long-description>&lt;p&gt;This method should
be implemented by sub classes when needed.&lt;/p&gt;</long-description>
          <tag line="235" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="250" package="LudoDB">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="246">
          <description>Implemented by sub classes.</description>
          <long-description/>
          <tag line="246" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="255" package="LudoDB">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="252">
          <description>Clear database cache for this instance.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="LudoDB">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="262">
          <description>Return data for this instance.</description>
          <long-description/>
          <tag line="262" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="LudoDB">
        <name>hasRowWith</name>
        <full_name>hasRowWith</full_name>
        <docblock line="271">
          <description>Returns true if database table has rows where one of the given columns has one of the
given values.</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if($this-&gt;hasRowWith(array("email" =&gt; "name@dhtmlgoodies.com"));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="271" name="param" description="" type="array" variable="$columnsEqual">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$columnsEqual</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBPDO.php" hash="f72bb80b7ac44bc7de66571a616b5176" package="LudoDB">
    <docblock line="2">
      <description>User: Alf Magne
Date: 31.01.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="LudoDB">
      <extends>\LudoDB</extends>
      <implements>\LudoDBAdapter</implements>
      <name>LudoDBPDO</name>
      <full_name>\LudoDBPDO</full_name>
      <docblock line="9">
        <description>PDO Mysql Adapter.</description>
        <long-description>&lt;p&gt;The default and preferred DB adapter to use.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="20" namespace="global" package="Default">
        <name>$conn</name>
        <default/>
        <docblock line="16">
          <description>Database connection resource reference</description>
          <long-description/>
          <tag line="16" name="var" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="LudoDB">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="22">
          <description>Connect to database</description>
          <long-description/>
          <tag line="22" name="throws" description="" type="\LudoDBConnectionException">
            <type by_reference="false">\LudoDBConnectionException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="LudoDB">
        <name>escapeString</name>
        <full_name>escapeString</full_name>
        <docblock line="38">
          <description>Escape string - nothing to do here since we're using prepared statements.</description>
          <long-description/>
          <tag line="38" name="param" description="" type="\" variable="$string"/>
          <tag line="38" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="LudoDB">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="48">
          <description>Execute query and return resource.</description>
          <long-description/>
          <tag line="48" name="param" description="" type="\" variable="$sql"/>
          <tag line="48" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="return" description="" type="bool|\mysqli_result|resource|\PDOStatement">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="48" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="LudoDB">
        <name>one</name>
        <full_name>one</full_name>
        <docblock line="69">
          <description>Get one row.</description>
          <long-description/>
          <tag line="69" name="param" description="" type="\" variable="$sql"/>
          <tag line="69" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="LudoDB">
        <name>countRows</name>
        <full_name>countRows</full_name>
        <docblock line="82">
          <description>Return number of rows.</description>
          <long-description/>
          <tag line="82" name="param" description="" type="\" variable="$sql"/>
          <tag line="82" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="LudoDB">
        <name>getInsertId</name>
        <full_name>getInsertId</full_name>
        <docblock line="94">
          <description>Get last insert id</description>
          <long-description/>
          <tag line="94" name="method" description="getInsertId" type="\" method_name=""/>
          <tag line="94" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="LudoDB">
        <name>nextRow</name>
        <full_name>nextRow</full_name>
        <docblock line="104">
          <description>Go to next row</description>
          <long-description/>
          <tag line="104" name="param" description="" type="\mysqli_result|resource|\PDOStatement" variable="$result">
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="104" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="LudoDB">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="114">
          <description>Return value of first column in a query</description>
          <long-description/>
          <tag line="114" name="param" description="" type="\" variable="$sql"/>
          <tag line="114" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="114" name="return" description="" type="null|array">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBProfiling.php" hash="cedc61b30ab2516bc7c569976126889e" package="LudoDB">
    <docblock line="2">
      <description>http://localhost/LudoDBProfiling/Person/1/read/profile
User: Alf Magne Kalleland
Date: 18.02.13
Time: 20:48</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="25" package="LudoDB">
      <extends/>
      <implements>\LudoDBService</implements>
      <name>LudoDBProfiling</name>
      <full_name>\LudoDBProfiling</full_name>
      <docblock line="11">
        <description>Class for profiling requests.</description>
        <long-description>&lt;p&gt;This resources requires that you have the xhprof module enabled
on your Apache web server. It's also easiest to use when you have the mod rewrite module enabled
Syntax
LudoDBProfiling/resourceToProfile/arg1/arg2/resourceServiceToProfile/profile
i.e first argument is LudoDBProfiling and last argument should be profile. The arguments
in between is the request you want to profile, example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://localhost/LudoDBProfiling/Person/1/read/profile
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="11" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$arguments</name>
        <default/>
        <docblock line="28">
          <description>Constructor arguments</description>
          <long-description/>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Default">
        <name>$name</name>
        <default/>
        <docblock line="34">
          <description>Profiling name</description>
          <long-description/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$start</name>
        <default/>
        <docblock line="40">
          <description>Start time</description>
          <long-description/>
          <tag line="40" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>Construct new instance</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="LudoDB">
        <name>getValidServices</name>
        <full_name>getValidServices</full_name>
        <docblock line="54">
          <description>Returning "profile" as only valid service method</description>
          <long-description/>
          <tag line="54" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="LudoDB">
        <name>validateArguments</name>
        <full_name>validateArguments</full_name>
        <docblock line="63">
          <description>Number of arguments has to be equal or bigger than 2 (resource + service name).</description>
          <long-description/>
          <tag line="63" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="63" name="param" description="" type="Array" variable="$arguments">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="63" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="69">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="LudoDB">
        <name>profile</name>
        <full_name>profile</full_name>
        <docblock line="74">
          <description>Start profiling.</description>
          <long-description/>
          <tag line="74" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="throws" description="" type="\LudoDBException">
            <type by_reference="false">\LudoDBException</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="LudoDB">
        <name>validateServiceData</name>
        <full_name>validateServiceData</full_name>
        <docblock line="110">
          <description>Validate service data</description>
          <long-description/>
          <tag line="110" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="LudoDB">
        <name>shouldCache</name>
        <full_name>shouldCache</full_name>
        <docblock line="121">
          <description>No caching</description>
          <long-description/>
          <tag line="121" name="param" description="" type="\" variable="$service"/>
          <tag line="121" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="LudoDB">
        <name>getOnSuccessMessageFor</name>
        <full_name>getOnSuccessMessageFor</full_name>
        <docblock line="131">
          <description>Return empty string on successful profiling.</description>
          <long-description/>
          <tag line="131" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="131" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="LudoDB">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="141">
          <description>Start profiling.</description>
          <long-description/>
          <tag line="141" name="param" description="" type="\" variable="$name"/>
          <tag line="141" name="throws" description="" type="\LudoDBException">
            <type by_reference="false">\LudoDBException</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="LudoDB">
        <name>getTimeUsage</name>
        <full_name>getTimeUsage</full_name>
        <docblock line="158">
          <description>Return elapsed time.</description>
          <long-description/>
          <tag line="158" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="LudoDB">
        <name>end</name>
        <full_name>end</full_name>
        <docblock line="167">
          <description>End profiling</description>
          <long-description/>
          <tag line="167" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="186" package="LudoDB">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="182">
          <description>Return path to xhprof</description>
          <long-description/>
          <tag line="182" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBRegistry.php" hash="b6223b650b98865da1f8065b11dac63f" package="LudoDB">
    <docblock line="2">
      <description>Class for storage of values
User: Alf Magne
Date: 11.01.13</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends/>
      <name>LudoDBRegistry</name>
      <full_name>\LudoDBRegistry</full_name>
      <docblock line="9">
        <description>Registry for safe keeping of temporary values like database connection details etc.</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="19" namespace="global" package="Default">
        <name>$storage</name>
        <default>array()</default>
        <docblock line="15">
          <description>Internal storage</description>
          <long-description/>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="26" package="LudoDB">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="21">
          <description>Store new value</description>
          <long-description/>
          <tag line="21" name="param" description="" type="\" variable="$key"/>
          <tag line="21" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="26">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="36" package="LudoDB">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="31">
          <description>Get value</description>
          <long-description/>
          <tag line="31" name="param" description="" type="\" variable="$key"/>
          <tag line="31" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="LudoDB">
        <name>isValid</name>
        <full_name>isValid</full_name>
        <docblock line="44">
          <description>Returns true when key is set in internal storage.</description>
          <long-description/>
          <tag line="44" name="param" description="" type="\" variable="$key"/>
          <tag line="44" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBRequestHandler.php" hash="f17d078f274ba08184205252f0178d8f" package="LudoDB">
    <docblock line="2">
      <description>LudoDB Request Handler - Handle WebService requests</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="LudoDB">
      <extends/>
      <name>LudoDBRequestHandler</name>
      <full_name>\LudoDBRequestHandler</full_name>
      <docblock line="7">
        <description>Request handler class for Front End Controller.</description>
        <long-description>&lt;p&gt;This class will handle requests sent
by Views and pass them to the correct LudoDBObject's.
User: Alf Magne Kalleland
Date: 13.01.13&lt;/p&gt;</long-description>
        <tag line="7" name="package" description="LudoDB"/>
        <tag line="7" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$resource</name>
        <default/>
        <docblock line="18">
          <description>Resource handled</description>
          <long-description/>
          <tag line="18" name="var" description="" type="\LudoDBObject|\LudoDBService">
            <type by_reference="false">\LudoDBObject</type>
            <type by_reference="false">\LudoDBService</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$serviceName</name>
        <default/>
        <docblock line="23">
          <description>Service name</description>
          <long-description/>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$cacheInstance</name>
        <default/>
        <docblock line="28">
          <description>Cache instance</description>
          <long-description/>
          <tag line="28" name="var" description="" type="\LudoDBCache">
            <type by_reference="false">\LudoDBCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$validServices</name>
        <default>array()</default>
        <docblock line="33">
          <description>Internal array of valid services for given resource.</description>
          <long-description/>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$success</name>
        <default>true</default>
        <docblock line="38">
          <description>Success value for handles request.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="global" package="Default">
        <name>$message</name>
        <default>""</default>
        <docblock line="43">
          <description>Response message for handled request</description>
          <long-description/>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="global" package="Default">
        <name>$code</name>
        <default>200</default>
        <docblock line="48">
          <description>Response code for handled request</description>
          <long-description/>
          <tag line="48" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Default">
        <name>$arguments</name>
        <default/>
        <docblock line="53">
          <description>Arguments for given request</description>
          <long-description/>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="62" namespace="global" package="Default">
        <name>$responseKey</name>
        <default>'response'</default>
        <docblock line="58">
          <description>Key used in response from service handler.</description>
          <long-description/>
          <tag line="58" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="LudoDB">
        <name>handle</name>
        <full_name>handle</full_name>
        <docblock line="64">
          <description>Handle request</description>
          <long-description>&lt;p&gt;router.template.php can be used as a template on how to create a controller for a request handler.&lt;/p&gt;

&lt;p&gt;Example code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require_once(dirname(__FILE__)."/autoload.php");
require_once("php/jsonwrapper/jsonwrapper.php");
date_default_timezone_set("Europe/Berlin");
if(file_exists("connection.php")){
    require("connection.php");
}

LudoDBRegistry::set('DEVELOP_MODE', true);
LudoDB::enableLogging();

$request = array('request' =&gt; isset($_GET['request']) ? $_GET['request'] : $_POST['request']);

if(isset($_POST['data'])){
    $request['data'] = isset($_POST['data']) ? $_POST['data'] : null;
}

if(isset($_POST['arguments'])){
    $request['arguments'] = $_POST['arguments'];
}

$handler = new LudoDBRequestHandler();
echo $handler-&gt;handle($request);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="64" name="param" description="" type="\" variable="$request"/>
          <tag line="64" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="throws" description="" type="\LudoDBObjectNotFoundException">
            <type by_reference="false">\LudoDBObjectNotFoundException</type>
          </tag>
          <tag line="64" name="throws" description="" type="\LudoDBServiceNotImplementedException">
            <type by_reference="false">\LudoDBServiceNotImplementedException</type>
          </tag>
          <tag line="64" name="throws" description="" type="\LudoDBInvalidServiceException">
            <type by_reference="false">\LudoDBInvalidServiceException</type>
          </tag>
          <tag line="64" name="throws" description="" type="\LudoDBInvalidArgumentsException">
            <type by_reference="false">\LudoDBInvalidArgumentsException</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="156" package="LudoDB">
        <name>getParsed</name>
        <full_name>getParsed</full_name>
        <docblock line="150">
          <description>Returned request sent to handler in valid internal format.</description>
          <long-description/>
          <tag line="150" name="param" description="" type="\" variable="$request"/>
          <tag line="150" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="169" package="LudoDB">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <docblock line="164">
          <description>Return data from handler in JSON format.</description>
          <long-description/>
          <tag line="164" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="164" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="195" package="LudoDB">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="190">
          <description>Get arguments from request sent to handler.</description>
          <long-description/>
          <tag line="190" name="param" description="" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="190" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$request</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="213" package="LudoDB">
        <name>getResource</name>
        <full_name>getResource</full_name>
        <docblock line="206">
          <description>Get name of resource for request.</description>
          <long-description/>
          <tag line="206" name="param" description="" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="param" description="" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="return" description="" type="null|object">
            <type by_reference="false">null</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="206" name="throws" description="" type="\LudoDBClassNotFoundException">
            <type by_reference="false">\LudoDBClassNotFoundException</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$request</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="213">
          <name>$args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="232" package="LudoDB">
        <name>getValidServices</name>
        <full_name>getValidServices</full_name>
        <docblock line="227">
          <description>Return valid services for handled resource.</description>
          <long-description/>
          <tag line="227" name="param" description="" type="array" variable="$request">
            <type by_reference="false">array</type>
          </tag>
          <tag line="227" name="return" description="" type="array|mixed">
            <type by_reference="false">array</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$request</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="248" package="LudoDB">
        <name>getReflectionClass</name>
        <full_name>getReflectionClass</full_name>
        <docblock line="242">
          <description>Use Reflection to get instance of resource class</description>
          <long-description/>
          <tag line="242" name="param" description="" type="\" variable="$className"/>
          <tag line="242" name="return" description="" type="\ReflectionClass">
            <type by_reference="false">\ReflectionClass</type>
          </tag>
          <tag line="242" name="throws" description="" type="\LudoDBClassNotFoundException">
            <type by_reference="false">\LudoDBClassNotFoundException</type>
          </tag>
        </docblock>
        <argument line="248">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="262" package="LudoDB">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
        <docblock line="257">
          <description>Return name of resource/class to be handled.</description>
          <long-description/>
          <tag line="257" name="param" description="" type="\" variable="$request"/>
          <tag line="257" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="273" package="LudoDB">
        <name>getServiceName</name>
        <full_name>getServiceName</full_name>
        <docblock line="268">
          <description>Return service method to execute</description>
          <long-description/>
          <tag line="268" name="param" description="" type="\" variable="$request"/>
          <tag line="268" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="283" package="LudoDB">
        <name>getCached</name>
        <full_name>getCached</full_name>
        <docblock line="278">
          <description>Return data from cache</description>
          <long-description/>
          <tag line="278" name="param" description="" type="array" variable="$requestData">
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$requestData</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="299" package="LudoDB">
        <name>ludoDBCache</name>
        <full_name>ludoDBCache</full_name>
        <docblock line="295">
          <description>Return LudoDBCache instance</description>
          <long-description/>
          <tag line="295" name="return" description="" type="\LudoDBCache">
            <type by_reference="false">\LudoDBCache</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="LudoDB">
        <name>clearCacheObject</name>
        <full_name>clearCacheObject</full_name>
        <docblock line="307">
          <description>Clear cache instance</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBSQL.php" hash="d9e725ec5b7e7267d73ec93b170dce2b" package="LudoDB">
    <docblock line="2">
      <description>Class for building SQL queries in LudoDB</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="LudoDB">
      <extends/>
      <name>LudoDBSql</name>
      <full_name>\LudoDBSql</full_name>
      <docblock line="7">
        <description>User: Alf Magne Kalleland
Date: 22.12.12</description>
        <long-description/>
        <tag line="7" name="package" description="LudoDB"/>
        <tag line="7" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <constant namespace="global" line="39" package="LudoDB">
        <name>DELETED</name>
        <full_name>DELETED</full_name>
        <value>'__DELETED__'</value>
        <docblock line="36">
          <description>Internal constant representing value of delete columns.</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="15">
          <description>Config array of LudoDBObject</description>
          <long-description/>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$arguments</name>
        <default/>
        <docblock line="20">
          <description>Constructor arguments of LudoDBObject instance.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="global" package="Default">
        <name>$obj</name>
        <default/>
        <docblock line="25">
          <description>Internal reference to LudoDBObject</description>
          <long-description/>
          <tag line="25" name="var" description="" type="\LudoDBObject">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$limit</name>
        <default>""</default>
        <docblock line="30">
          <description>Internal string for limit queries</description>
          <long-description/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$configParser</name>
        <default/>
        <docblock line="41">
          <description>Config parser reference.</description>
          <long-description/>
          <tag line="41" name="var" description="" type="\LudoDBConfigParser">
            <type by_reference="false">\LudoDBConfigParser</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>Constructs new SQL handler for given LudoDBModel or LudoDBCollection.</description>
          <long-description/>
          <tag line="47" name="param" description="" type="\LudoDBObject" variable="$obj">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$obj</name>
          <default/>
          <type>\LudoDBObject</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="63" package="LudoDB">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="60">
          <description>Validate arguments</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="LudoDB">
        <name>getSql</name>
        <full_name>getSql</full_name>
        <docblock line="68">
          <description>Return "select" sql for it's LudoDBObject</description>
          <long-description/>
          <tag line="68" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="LudoDB">
        <name>setLimit</name>
        <full_name>setLimit</full_name>
        <docblock line="81">
          <description>Limit number of rows returned</description>
          <long-description/>
          <tag line="81" name="param" description="" type="\" variable="$start"/>
          <tag line="81" name="param" description="" type="null" variable="$count">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$start</name>
          <default/>
          <type/>
        </argument>
        <argument line="86">
          <name>$count</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="LudoDB">
        <name>clearLimit</name>
        <full_name>clearLimit</full_name>
        <docblock line="90">
          <description>Clear limit of returned rows</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="102" package="LudoDB">
        <name>getCompiledSql</name>
        <full_name>getCompiledSql</full_name>
        <docblock line="97">
          <description>Return compiled sql from config of LudoDBObject.</description>
          <long-description>&lt;p&gt;This will only be called when config
of LudoDBModel or LudoDBCollection does not contain any "sql" key/value.&lt;/p&gt;</long-description>
          <tag line="97" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="111" package="LudoDB">
        <name>getColumns</name>
        <full_name>getColumns</full_name>
        <docblock line="107">
          <description>Return columns for "select" sql</description>
          <long-description/>
          <tag line="107" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="128" package="LudoDB">
        <name>getMyColumns</name>
        <full_name>getMyColumns</full_name>
        <docblock line="124">
          <description>Get columns for table name in LudoDBModel/LudoDBCollection (my columns)</description>
          <long-description/>
          <tag line="124" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="140" package="LudoDB">
        <name>getColumnsForCollectionSQL</name>
        <full_name>getColumnsForCollectionSQL</full_name>
        <docblock line="136">
          <description>Return column names for a colletion</description>
          <long-description/>
          <tag line="136" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="149" package="LudoDB">
        <name>getColumnsToSelectFromJoins</name>
        <full_name>getColumnsToSelectFromJoins</full_name>
        <docblock line="145">
          <description>Return column names for joined tables.</description>
          <long-description/>
          <tag line="145" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="162" package="LudoDB">
        <name>getTables</name>
        <full_name>getTables</full_name>
        <docblock line="158">
          <description>Return name of tables involved in "select" SQL</description>
          <long-description/>
          <tag line="158" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="171" package="LudoDB">
        <name>getJoins</name>
        <full_name>getJoins</full_name>
        <docblock line="167">
          <description>Get "join" for "select" SQL.</description>
          <long-description/>
          <tag line="167" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="192" package="LudoDB">
        <name>getTableAndColumn</name>
        <full_name>getTableAndColumn</full_name>
        <docblock line="187">
          <description>Return column name prefixed by tableName.</description>
          <long-description/>
          <tag line="187" name="param" description="" type="\" variable="$column"/>
          <tag line="187" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="201" package="LudoDB">
        <name>getOrderBy</name>
        <full_name>getOrderBy</full_name>
        <docblock line="197">
          <description>Get order by for "select" SQL</description>
          <long-description/>
          <tag line="197" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="LudoDB">
        <name>getCreateTableSql</name>
        <full_name>getCreateTableSql</full_name>
        <docblock line="207">
          <description>Return "create" table SQL.</description>
          <long-description/>
          <tag line="207" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="LudoDB">
        <name>getInsertSQL</name>
        <full_name>getInsertSQL</full_name>
        <docblock line="238">
          <description>Return "insert" SQL.</description>
          <long-description/>
          <tag line="238" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="265" package="LudoDB">
        <name>getPDOInsert</name>
        <full_name>getPDOInsert</full_name>
        <docblock line="260">
          <description>Return "insert" SQL for the PDO adapter (prepared statements)</description>
          <long-description/>
          <tag line="260" name="param" description="" type="\" variable="$data"/>
          <tag line="260" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="265">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="LudoDB">
        <name>getUpdateSql</name>
        <full_name>getUpdateSql</full_name>
        <docblock line="283">
          <description>Return "update" SQL.</description>
          <long-description/>
          <tag line="283" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="297" package="LudoDB">
        <name>getUpdatesForSql</name>
        <full_name>getUpdatesForSql</full_name>
        <docblock line="292">
          <description>Return columns to update for "update" SQL.</description>
          <long-description/>
          <tag line="292" name="param" description="" type="\" variable="$updates"/>
          <tag line="292" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="297">
          <name>$updates</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="314" package="LudoDB">
        <name>fromPrepared</name>
        <full_name>fromPrepared</full_name>
        <docblock line="308">
          <description>Convert SQL string for prepared statement to standard SQL statement with values escaped(safe values).</description>
          <long-description/>
          <tag line="308" name="param" description="" type="\" variable="$sql"/>
          <tag line="308" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="308" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="314">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="LudoDBServiceRegistry.php" hash="45df37eaa20293b732a0058f2e11a5f7" package="LudoDB">
    <docblock line="2">
      <description>User: Alf Magne Kalleland
Date: 12.02.13
Time: 23:14</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="LudoDB">
      <extends/>
      <name>LudoDBServiceRegistry</name>
      <full_name>\LudoDBServiceRegistry</full_name>
      <docblock line="9">
        <description>Registry of LudoDBService classes.</description>
        <long-description>&lt;p&gt;By registering LudoDBService classes, you may get an overview of all the resources and
services you have available.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="23" namespace="global" package="Default">
        <name>$registeredServices</name>
        <default>array()</default>
        <docblock line="19">
          <description>Array of registered resource services.</description>
          <long-description/>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="30" package="LudoDB">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="25">
          <description>Register service resource.</description>
          <long-description>&lt;p&gt;If you need access to all available services, you can call
LudoDBServiceRegistry::getAll(). Argument is name of a LudoDBService class.&lt;/p&gt;</long-description>
          <tag line="25" name="param" description="" type="String" variable="$resource">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$resource</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="LudoDB">
        <name>getAll</name>
        <full_name>getAll</full_name>
        <docblock line="44">
          <description>Return array of all registered service resources with service names.</description>
          <long-description/>
          <tag line="44" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBTreeCollection.php" hash="61d404f124fe68dd76ec1a6fca04a9ee" package="LudoDB">
    <docblock line="2">
      <description>Tree collection
Date: 08.02.13
Time: 22:00</description>
      <long-description/>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="58" package="LudoDB">
      <extends>\LudoDBCollection</extends>
      <name>LudoDBTreeCollection</name>
      <full_name>\LudoDBTreeCollection</full_name>
      <docblock line="14">
        <description>LudoDBTreeCollection</description>
        <long-description>&lt;p&gt;Example of use of LudoDBTreeCollection&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; class TestNodesWithLeafs extends LudoDBTreeCollection implements LudoDBService{
     protected $config = array(
         "sql" =&gt; "select * from test_node order by parent,id",
         "childKey" =&gt; "children",
         "model" =&gt; "TestNode",
         "fk" =&gt; "parent",
         "pk" =&gt; "id",
         "static" =&gt; array(
             "type" =&gt; "node"
         ),
         "merge" =&gt; array(
             array(
                 "class" =&gt; "LeafNodes",
                 "fk" =&gt; "parent_node_id",
                 "pk" =&gt; "id"
             )
        )
     );

     public function validateArguments($service, $arguments){
         return count($arguments) === 0;
     }

     public function validateServiceData($service, $data){
         return true;
     }

     public function getValidServices(){
         return array('read');
     }

     public function shouldCache($service){
         return $service === "read";
     }
 }
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="14" name="package" description="LudoDB"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="LudoDB">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="61">
          <description>Return values in a tree structure</description>
          <long-description/>
          <tag line="61" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="LudoDBUtility.php" hash="a55b6e5649253f2669a2d52df219a52f" package="LudoDB">
    <docblock line="2">
      <description>Class used during Development/Debugging.</description>
      <long-description>&lt;p&gt;User: Alf Magne
Date: 06.02.13&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="LudoDB">
      <extends/>
      <name>LudoDBUtility</name>
      <full_name>\LudoDBUtility</full_name>
      <docblock line="9">
        <description>LudoDBUtility class with development methods for manipulation of database tables.</description>
        <long-description/>
        <tag line="9" name="package" description="LudoDB"/>
        <tag line="9" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$instances</name>
        <default>array()</default>
        <docblock line="17">
          <description>Array of LudoDBModel instances</description>
          <long-description/>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="LudoDB">
        <name>dropAndCreate</name>
        <full_name>dropAndCreate</full_name>
        <docblock line="23">
          <description>Drop and create database tables for the given class names
$classNames is an array of LudoDBModel sub classes.</description>
          <long-description>&lt;p&gt;This method is useful during development since it will check
table references(defined in config) and drop and create the tables
in the right order&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="LudoDB">
        <name>dropDatabaseTables</name>
        <full_name>dropDatabaseTables</full_name>
        <docblock line="36">
          <description>Drop the database tables of the given classes.</description>
          <long-description/>
          <tag line="36" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="LudoDB">
        <name>createDatabaseTables</name>
        <full_name>createDatabaseTables</full_name>
        <docblock line="48">
          <description>Create database tables for the given classes.</description>
          <long-description>&lt;p&gt;$classNames is an array of
valid LudoDBModel class names.&lt;/p&gt;</long-description>
          <tag line="48" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="67" package="LudoDB">
        <name>getLudoDBModelTables</name>
        <full_name>getLudoDBModelTables</full_name>
        <docblock line="62">
          <description>Return database tables for given class names</description>
          <long-description/>
          <tag line="62" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="86" package="LudoDB">
        <name>getClassesRearranged</name>
        <full_name>getClassesRearranged</full_name>
        <docblock line="81">
          <description>Return classes in right order based on dependencies (foreign keys)</description>
          <long-description/>
          <tag line="81" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="130" package="LudoDB">
        <name>withDuplicatesRemoved</name>
        <full_name>withDuplicatesRemoved</full_name>
        <docblock line="125">
          <description>Remove duplicate class names, i.e.</description>
          <long-description>&lt;p&gt;classes using the same database table.&lt;/p&gt;</long-description>
          <tag line="125" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
          <tag line="125" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="149" package="LudoDB">
        <name>getTableNames</name>
        <full_name>getTableNames</full_name>
        <docblock line="144">
          <description>Return table names for given classes.</description>
          <long-description/>
          <tag line="144" name="param" description="" type="\" variable="$classNames"/>
          <tag line="144" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$classNames</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="164" package="LudoDB">
        <name>getReferencedTables</name>
        <full_name>getReferencedTables</full_name>
        <docblock line="159">
          <description>Get tables referenced by a model, i.e.</description>
          <long-description>&lt;p&gt;foreign keys.&lt;/p&gt;</long-description>
          <tag line="159" name="param" description="" type="\LudoDBModel" variable="$model">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
          <tag line="159" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$model</name>
          <default/>
          <type>\LudoDBModel</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="182" package="LudoDB">
        <name>getClassInstance</name>
        <full_name>getClassInstance</full_name>
        <docblock line="177">
          <description>Return instance of a LudoDBModel</description>
          <long-description/>
          <tag line="177" name="param" description="" type="\" variable="$name"/>
          <tag line="177" name="return" description="" type="\LudoDBModel">
            <type by_reference="false">\LudoDBModel</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="LudoDB">
        <name>validateConfigsOf</name>
        <full_name>validateConfigsOf</full_name>
        <docblock line="191">
          <description>To be implemented</description>
          <long-description/>
          <tag line="191" name="param" description="" type="array" variable="$classNames">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$classNames</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="LudoDB">
        <name>getAllAvailableServices</name>
        <full_name>getAllAvailableServices</full_name>
        <docblock line="199">
          <description>To be implemented.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="190">implement</todo>
      <todo line="198">implement</todo>
    </markers>
  </file>
  <file path="LudoJS.php" hash="6614161118777d6c26c9ef3e5fd78644" package="LudoDB">
    <docblock line="2">
      <description>Comment pending.</description>
      <long-description>&lt;p&gt;User: Alf Magne Kalleland
Date: 13.04.13
Time: 15:59&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="LudoDB"/>
      <tag line="2" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="LudoDB">
      <extends/>
      <implements>\LudoDBService</implements>
      <name>LudoJS</name>
      <full_name>\LudoJS</full_name>
      <docblock line="10">
        <description>LudoJS service class.</description>
        <long-description>&lt;p&gt;This class outputs LudoJS config objects for LudoDB instances&lt;/p&gt;

&lt;p&gt;Example where LudoJS config for LudoDBModel Person is returned with values of Person with id equals 1:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$handler = new LudoDBRequestHandler();
echo $handler-&gt;handle('LudoJS/Person/1/form');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return the config as a JSON string.&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="LudoDB"/>
        <tag line="10" name="author" description="Alf Magne Kalleland &lt;post@dhtmlgoodies.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$resource</name>
        <default/>
        <docblock line="28">
          <description>Reference to the LudoDBObject to handle</description>
          <long-description/>
          <tag line="28" name="var" description="" type="\LudoDBObject">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="LudoDB">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>Construct new instance</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="LudoDB">
        <name>getValidServices</name>
        <full_name>getValidServices</full_name>
        <docblock line="41">
          <description>Return "form" as only valid service</description>
          <long-description/>
          <tag line="41" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="LudoDB">
        <name>validateArguments</name>
        <full_name>validateArguments</full_name>
        <docblock line="49">
          <description>Accepted number of arguments is 1 or 2 (second argument is optional "id" of resource)</description>
          <long-description/>
          <tag line="49" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="49" name="param" description="" type="Array" variable="$arguments">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="49" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="LudoDB">
        <name>validateServiceData</name>
        <full_name>validateServiceData</full_name>
        <docblock line="60">
          <description>No data is allowed to this service</description>
          <long-description/>
          <tag line="60" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="60" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="LudoDB">
        <name>shouldCache</name>
        <full_name>shouldCache</full_name>
        <docblock line="70">
          <description>No caching</description>
          <long-description/>
          <tag line="70" name="param" description="" type="string" variable="$service">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="LudoDB">
        <name>getOnSuccessMessageFor</name>
        <full_name>getOnSuccessMessageFor</full_name>
        <docblock line="79">
          <description>Returns empty string as on success message for service</description>
          <long-description/>
          <tag line="79" name="param" description="" type="String" variable="$service">
            <type by_reference="false">String</type>
          </tag>
          <tag line="79" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="LudoDB">
        <name>form</name>
        <full_name>form</full_name>
        <docblock line="88">
          <description>"form" service</description>
          <long-description/>
          <tag line="88" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="113" package="LudoDB">
        <name>setMissingProperties</name>
        <full_name>setMissingProperties</full_name>
        <docblock line="108">
          <description>Update child array with default properties when not specified in config, example "label"</description>
          <long-description/>
          <tag line="108" name="param" description="" type="\" variable="$children"/>
          <tag line="108" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$children</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="127" package="LudoDB">
        <name>createDataSources</name>
        <full_name>createDataSources</full_name>
        <docblock line="122">
          <description>Create dataSource objects for children.</description>
          <long-description/>
          <tag line="122" name="param" description="" type="\" variable="$children"/>
          <tag line="122" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$children</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="141" package="LudoDB">
        <name>getDataSourceConfig</name>
        <full_name>getDataSourceConfig</full_name>
        <docblock line="136">
          <description>Return data source config with values for columns.</description>
          <long-description/>
          <tag line="136" name="param" description="" type="\" variable="$source"/>
          <tag line="136" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="162" package="LudoDB">
        <name>getChildrenInRightOrder</name>
        <full_name>getChildrenInRightOrder</full_name>
        <docblock line="157">
          <description>Return childrne in correct order according to "order" attribute</description>
          <long-description/>
          <tag line="157" name="param" description="" type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="157" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$children</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="181" package="LudoDB">
        <name>setChildValues</name>
        <full_name>setChildValues</full_name>
        <docblock line="176">
          <description>Add "value" properties to children.</description>
          <long-description/>
          <tag line="176" name="param" description="" type="\" variable="$children"/>
          <tag line="176" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$children</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="198" package="LudoDB">
        <name>getModelResource</name>
        <full_name>getModelResource</full_name>
        <docblock line="193">
          <description>Return model resource to handle</description>
          <long-description/>
          <tag line="193" name="return" description="" type="\LudoDBObject">
            <type by_reference="false">\LudoDBObject</type>
          </tag>
          <tag line="193" name="throws" description="" type="\LudoDBClassNotFoundException">
            <type by_reference="false">\LudoDBClassNotFoundException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="216" package="LudoDB">
        <name>getReflectionClass</name>
        <full_name>getReflectionClass</full_name>
        <docblock line="210">
          <description>Use Reflection to get instance of resource class</description>
          <long-description/>
          <tag line="210" name="param" description="" type="\" variable="$className"/>
          <tag line="210" name="return" description="" type="\ReflectionClass">
            <type by_reference="false">\ReflectionClass</type>
          </tag>
          <tag line="210" name="throws" description="" type="\LudoDBClassNotFoundException">
            <type by_reference="false">\LudoDBClassNotFoundException</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="LudoDB" full_name="LudoDB"/>
  <namespace name="global" full_name="global"/>
  <marker count="4">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
