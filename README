Framework for easy creation and manipulation of mySQL tables using PHP.

Example:

<?php

class Person extends LudoDbTable
{
    protected $idField = 'id';
    protected $config = array(
        'table' => 'Person',
        'columns' => array(
            'id' => 'int auto_increment not null primary key',
            'firstname' => 'varchar(32)',
            'lastname' => 'varchar(32)',
            'address' => 'varchar(64)',
            'zip' => 'varchar(5)'
        ),
        'join' => array(
            array('table' => 'city', 'pk' => 'zip', 'fk' => 'zip', 'columns' => array('city'))
        )

    );

    public function setFirstname($value){
        $this->setValue('firstname', $value);
    }

    public function setLastName($value){
        $this->setvalue('lastname', $value);
    }

    public function setZip($value){
        $this->setValue('zip', $value);
    }

    public function getFirstname(){
        return $this->getvalue('firstname');
    }

    public function getLastname(){
        return $this->getvalue('lastname');
    }

    public function getZip(){
        return $this->getValue('zip');
    }

    public function getCity(){
        return $this->getValue('city');
    }
}


?>
Usage:

<?php
$person = new Person();
$person->setFirstname('John');
$person->setLastname('Wayne');
$person->commit();
?>
For creating a new Person record and save it to the database

<?php
echo $person->getId();
echo $person->getFirstname();
echo $person->getLastname();
?>

Will output data for this record.

<?php
$person = new Person(1);
$person->setLastname('Johnson');
$person->commit();
?>
Will update lastname in db for person with id=1

<?php
echo $person->getJSON();
?>

will output person data in JSON format.